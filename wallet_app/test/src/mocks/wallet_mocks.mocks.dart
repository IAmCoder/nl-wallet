// Mocks generated by Mockito 5.4.4 from annotations
// in wallet/test/src/mocks/wallet_mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i9;
import 'dart:ui' as _i12;

import 'package:flutter/foundation.dart' as _i3;
import 'package:flutter/material.dart' as _i4;
import 'package:flutter/scheduler.dart' as _i6;
import 'package:flutter/services.dart' as _i10;
import 'package:flutter/src/widgets/focus_manager.dart' as _i2;
import 'package:flutter/src/widgets/framework.dart' as _i5;
import 'package:flutter/src/widgets/restoration.dart' as _i13;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i11;
import 'package:wallet/src/data/repository/card/wallet_card_repository.dart' as _i20;
import 'package:wallet/src/data/repository/configuration/configuration_repository.dart' as _i23;
import 'package:wallet/src/data/repository/disclosure/disclosure_repository.dart' as _i17;
import 'package:wallet/src/data/repository/event/wallet_event_repository.dart' as _i21;
import 'package:wallet/src/data/repository/pid/pid_repository.dart' as _i15;
import 'package:wallet/src/data/repository/wallet/wallet_repository.dart' as _i19;
import 'package:wallet/src/data/service/navigation_service.dart' as _i26;
import 'package:wallet/src/domain/model/attribute/data_attribute.dart' as _i16;
import 'package:wallet/src/domain/model/configuration/flutter_app_configuration.dart' as _i24;
import 'package:wallet/src/domain/model/disclosure/start_disclosure_result.dart' as _i18;
import 'package:wallet/src/domain/model/event/wallet_event.dart' as _i22;
import 'package:wallet/src/domain/model/pin/check_pin_result.dart' as _i33;
import 'package:wallet/src/domain/model/wallet_card.dart' as _i8;
import 'package:wallet/src/domain/usecase/app/check_is_app_initialized_usecase.dart' as _i29;
import 'package:wallet/src/domain/usecase/card/observe_wallet_cards_usecase.dart' as _i43;
import 'package:wallet/src/domain/usecase/disclosure/accept_disclosure_usecase.dart' as _i39;
import 'package:wallet/src/domain/usecase/disclosure/cancel_disclosure_usecase.dart' as _i42;
import 'package:wallet/src/domain/usecase/disclosure/start_disclosure_usecase.dart' as _i41;
import 'package:wallet/src/domain/usecase/history/observe_recent_history_usecase.dart' as _i44;
import 'package:wallet/src/domain/usecase/issuance/accept_issuance_usecase.dart' as _i40;
import 'package:wallet/src/domain/usecase/navigation/check_navigation_prerequisites_usecase.dart' as _i36;
import 'package:wallet/src/domain/usecase/navigation/perform_pre_navigation_actions_usecase.dart' as _i27;
import 'package:wallet/src/domain/usecase/network/check_has_internet_usecase.dart' as _i35;
import 'package:wallet/src/domain/usecase/pid/accept_offered_pid_usecase.dart' as _i37;
import 'package:wallet/src/domain/usecase/pin/check_is_valid_pin_usecase.dart' as _i45;
import 'package:wallet/src/domain/usecase/pin/check_pin_usecase.dart' as _i32;
import 'package:wallet/src/domain/usecase/pin/unlock_wallet_with_pin_usecase.dart' as _i47;
import 'package:wallet/src/domain/usecase/sign/accept_sign_agreement_usecase.dart' as _i38;
import 'package:wallet/src/domain/usecase/uri/decode_uri_usecase.dart' as _i28;
import 'package:wallet/src/domain/usecase/wallet/create_wallet_usecase.dart' as _i46;
import 'package:wallet/src/domain/usecase/wallet/is_wallet_initialized_with_pid_usecase.dart' as _i30;
import 'package:wallet/src/domain/usecase/wallet/observe_wallet_locked_usecase.dart' as _i31;
import 'package:wallet/src/domain/usecase/wallet/reset_wallet_usecase.dart' as _i48;
import 'package:wallet/src/domain/usecase/wallet/setup_mocked_wallet_usecase.dart' as _i34;
import 'package:wallet/src/util/mapper/mapper.dart' as _i14;
import 'package:wallet/src/wallet_core/typed/typed_wallet_core.dart' as _i25;
import 'package:wallet_core/core.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFocusNode_0 extends _i1.SmartFake implements _i2.FocusNode {
  _FakeFocusNode_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) => super.toString();
}

class _FakeValueNotifier_1<T> extends _i1.SmartFake implements _i3.ValueNotifier<T> {
  _FakeValueNotifier_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNavigator_2 extends _i1.SmartFake implements _i4.Navigator {
  _FakeNavigator_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) => super.toString();
}

class _FakeBuildContext_3 extends _i1.SmartFake implements _i5.BuildContext {
  _FakeBuildContext_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWidget_4 extends _i1.SmartFake implements _i5.Widget {
  _FakeWidget_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) => super.toString();
}

class _FakeDiagnosticsNode_5 extends _i1.SmartFake implements _i3.DiagnosticsNode {
  _FakeDiagnosticsNode_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({
    _i3.TextTreeConfiguration? parentConfiguration,
    _i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info,
  }) =>
      super.toString();
}

class _FakeTicker_6 extends _i1.SmartFake implements _i6.Ticker {
  _FakeTicker_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({bool? debugIncludeStack = false}) => super.toString();
}

class _FakeWalletInstructionResult_7 extends _i1.SmartFake implements _i7.WalletInstructionResult {
  _FakeWalletInstructionResult_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAcceptDisclosureResult_8 extends _i1.SmartFake implements _i7.AcceptDisclosureResult {
  _FakeAcceptDisclosureResult_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWalletCard_9 extends _i1.SmartFake implements _i8.WalletCard {
  _FakeWalletCard_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStartDisclosureResult_10 extends _i1.SmartFake implements _i7.StartDisclosureResult {
  _FakeStartDisclosureResult_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFuture_11<T1> extends _i1.SmartFake implements _i9.Future<T1> {
  _FakeFuture_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFlutterRustBridgeTaskConstMeta_12 extends _i1.SmartFake implements _i7.FlutterRustBridgeTaskConstMeta {
  _FakeFlutterRustBridgeTaskConstMeta_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NavigatorState].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigatorState extends _i1.Mock implements _i4.NavigatorState {
  @override
  _i2.FocusNode get focusNode => (super.noSuchMethod(
        Invocation.getter(#focusNode),
        returnValue: _FakeFocusNode_0(
          this,
          Invocation.getter(#focusNode),
        ),
        returnValueForMissingStub: _FakeFocusNode_0(
          this,
          Invocation.getter(#focusNode),
        ),
      ) as _i2.FocusNode);

  @override
  _i3.ValueNotifier<bool> get userGestureInProgressNotifier => (super.noSuchMethod(
        Invocation.getter(#userGestureInProgressNotifier),
        returnValue: _FakeValueNotifier_1<bool>(
          this,
          Invocation.getter(#userGestureInProgressNotifier),
        ),
        returnValueForMissingStub: _FakeValueNotifier_1<bool>(
          this,
          Invocation.getter(#userGestureInProgressNotifier),
        ),
      ) as _i3.ValueNotifier<bool>);

  @override
  bool get userGestureInProgress => (super.noSuchMethod(
        Invocation.getter(#userGestureInProgress),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i4.Navigator get widget => (super.noSuchMethod(
        Invocation.getter(#widget),
        returnValue: _FakeNavigator_2(
          this,
          Invocation.getter(#widget),
        ),
        returnValueForMissingStub: _FakeNavigator_2(
          this,
          Invocation.getter(#widget),
        ),
      ) as _i4.Navigator);

  @override
  _i5.BuildContext get context => (super.noSuchMethod(
        Invocation.getter(#context),
        returnValue: _FakeBuildContext_3(
          this,
          Invocation.getter(#context),
        ),
        returnValueForMissingStub: _FakeBuildContext_3(
          this,
          Invocation.getter(#context),
        ),
      ) as _i5.BuildContext);

  @override
  bool get mounted => (super.noSuchMethod(
        Invocation.getter(#mounted),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get restorePending => (super.noSuchMethod(
        Invocation.getter(#restorePending),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void initState() => super.noSuchMethod(
        Invocation.method(
          #initState,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void restoreState(
    _i10.RestorationBucket? oldBucket,
    bool? initialRestore,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #restoreState,
          [
            oldBucket,
            initialRestore,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didToggleBucket(_i10.RestorationBucket? oldBucket) => super.noSuchMethod(
        Invocation.method(
          #didToggleBucket,
          [oldBucket],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didChangeDependencies() => super.noSuchMethod(
        Invocation.method(
          #didChangeDependencies,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didUpdateWidget(_i5.StatefulWidget? oldWidget) => super.noSuchMethod(
        Invocation.method(
          #didUpdateWidget,
          [oldWidget],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void deactivate() => super.noSuchMethod(
        Invocation.method(
          #deactivate,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void activate() => super.noSuchMethod(
        Invocation.method(
          #activate,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.Future<T?> pushNamed<T extends Object?>(
    String? routeName, {
    Object? arguments,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pushNamed,
          [routeName],
          {#arguments: arguments},
        ),
        returnValue: _i9.Future<T?>.value(),
        returnValueForMissingStub: _i9.Future<T?>.value(),
      ) as _i9.Future<T?>);

  @override
  String restorablePushNamed<T extends Object?>(
    String? routeName, {
    Object? arguments,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #restorablePushNamed,
          [routeName],
          {#arguments: arguments},
        ),
        returnValue: _i11.dummyValue<String>(
          this,
          Invocation.method(
            #restorablePushNamed,
            [routeName],
            {#arguments: arguments},
          ),
        ),
        returnValueForMissingStub: _i11.dummyValue<String>(
          this,
          Invocation.method(
            #restorablePushNamed,
            [routeName],
            {#arguments: arguments},
          ),
        ),
      ) as String);

  @override
  _i9.Future<T?> pushReplacementNamed<T extends Object?, TO extends Object?>(
    String? routeName, {
    TO? result,
    Object? arguments,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pushReplacementNamed,
          [routeName],
          {
            #result: result,
            #arguments: arguments,
          },
        ),
        returnValue: _i9.Future<T?>.value(),
        returnValueForMissingStub: _i9.Future<T?>.value(),
      ) as _i9.Future<T?>);

  @override
  String restorablePushReplacementNamed<T extends Object?, TO extends Object?>(
    String? routeName, {
    TO? result,
    Object? arguments,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #restorablePushReplacementNamed,
          [routeName],
          {
            #result: result,
            #arguments: arguments,
          },
        ),
        returnValue: _i11.dummyValue<String>(
          this,
          Invocation.method(
            #restorablePushReplacementNamed,
            [routeName],
            {
              #result: result,
              #arguments: arguments,
            },
          ),
        ),
        returnValueForMissingStub: _i11.dummyValue<String>(
          this,
          Invocation.method(
            #restorablePushReplacementNamed,
            [routeName],
            {
              #result: result,
              #arguments: arguments,
            },
          ),
        ),
      ) as String);

  @override
  _i9.Future<T?> popAndPushNamed<T extends Object?, TO extends Object?>(
    String? routeName, {
    TO? result,
    Object? arguments,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #popAndPushNamed,
          [routeName],
          {
            #result: result,
            #arguments: arguments,
          },
        ),
        returnValue: _i9.Future<T?>.value(),
        returnValueForMissingStub: _i9.Future<T?>.value(),
      ) as _i9.Future<T?>);

  @override
  String restorablePopAndPushNamed<T extends Object?, TO extends Object?>(
    String? routeName, {
    TO? result,
    Object? arguments,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #restorablePopAndPushNamed,
          [routeName],
          {
            #result: result,
            #arguments: arguments,
          },
        ),
        returnValue: _i11.dummyValue<String>(
          this,
          Invocation.method(
            #restorablePopAndPushNamed,
            [routeName],
            {
              #result: result,
              #arguments: arguments,
            },
          ),
        ),
        returnValueForMissingStub: _i11.dummyValue<String>(
          this,
          Invocation.method(
            #restorablePopAndPushNamed,
            [routeName],
            {
              #result: result,
              #arguments: arguments,
            },
          ),
        ),
      ) as String);

  @override
  _i9.Future<T?> pushNamedAndRemoveUntil<T extends Object?>(
    String? newRouteName,
    _i4.RoutePredicate? predicate, {
    Object? arguments,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pushNamedAndRemoveUntil,
          [
            newRouteName,
            predicate,
          ],
          {#arguments: arguments},
        ),
        returnValue: _i9.Future<T?>.value(),
        returnValueForMissingStub: _i9.Future<T?>.value(),
      ) as _i9.Future<T?>);

  @override
  String restorablePushNamedAndRemoveUntil<T extends Object?>(
    String? newRouteName,
    _i4.RoutePredicate? predicate, {
    Object? arguments,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #restorablePushNamedAndRemoveUntil,
          [
            newRouteName,
            predicate,
          ],
          {#arguments: arguments},
        ),
        returnValue: _i11.dummyValue<String>(
          this,
          Invocation.method(
            #restorablePushNamedAndRemoveUntil,
            [
              newRouteName,
              predicate,
            ],
            {#arguments: arguments},
          ),
        ),
        returnValueForMissingStub: _i11.dummyValue<String>(
          this,
          Invocation.method(
            #restorablePushNamedAndRemoveUntil,
            [
              newRouteName,
              predicate,
            ],
            {#arguments: arguments},
          ),
        ),
      ) as String);

  @override
  _i9.Future<T?> push<T extends Object?>(_i4.Route<T>? route) => (super.noSuchMethod(
        Invocation.method(
          #push,
          [route],
        ),
        returnValue: _i9.Future<T?>.value(),
        returnValueForMissingStub: _i9.Future<T?>.value(),
      ) as _i9.Future<T?>);

  @override
  String restorablePush<T extends Object?>(
    _i4.RestorableRouteBuilder<T>? routeBuilder, {
    Object? arguments,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #restorablePush,
          [routeBuilder],
          {#arguments: arguments},
        ),
        returnValue: _i11.dummyValue<String>(
          this,
          Invocation.method(
            #restorablePush,
            [routeBuilder],
            {#arguments: arguments},
          ),
        ),
        returnValueForMissingStub: _i11.dummyValue<String>(
          this,
          Invocation.method(
            #restorablePush,
            [routeBuilder],
            {#arguments: arguments},
          ),
        ),
      ) as String);

  @override
  _i9.Future<T?> pushReplacement<T extends Object?, TO extends Object?>(
    _i4.Route<T>? newRoute, {
    TO? result,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pushReplacement,
          [newRoute],
          {#result: result},
        ),
        returnValue: _i9.Future<T?>.value(),
        returnValueForMissingStub: _i9.Future<T?>.value(),
      ) as _i9.Future<T?>);

  @override
  String restorablePushReplacement<T extends Object?, TO extends Object?>(
    _i4.RestorableRouteBuilder<T>? routeBuilder, {
    TO? result,
    Object? arguments,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #restorablePushReplacement,
          [routeBuilder],
          {
            #result: result,
            #arguments: arguments,
          },
        ),
        returnValue: _i11.dummyValue<String>(
          this,
          Invocation.method(
            #restorablePushReplacement,
            [routeBuilder],
            {
              #result: result,
              #arguments: arguments,
            },
          ),
        ),
        returnValueForMissingStub: _i11.dummyValue<String>(
          this,
          Invocation.method(
            #restorablePushReplacement,
            [routeBuilder],
            {
              #result: result,
              #arguments: arguments,
            },
          ),
        ),
      ) as String);

  @override
  _i9.Future<T?> pushAndRemoveUntil<T extends Object?>(
    _i4.Route<T>? newRoute,
    _i4.RoutePredicate? predicate,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #pushAndRemoveUntil,
          [
            newRoute,
            predicate,
          ],
        ),
        returnValue: _i9.Future<T?>.value(),
        returnValueForMissingStub: _i9.Future<T?>.value(),
      ) as _i9.Future<T?>);

  @override
  String restorablePushAndRemoveUntil<T extends Object?>(
    _i4.RestorableRouteBuilder<T>? newRouteBuilder,
    _i4.RoutePredicate? predicate, {
    Object? arguments,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #restorablePushAndRemoveUntil,
          [
            newRouteBuilder,
            predicate,
          ],
          {#arguments: arguments},
        ),
        returnValue: _i11.dummyValue<String>(
          this,
          Invocation.method(
            #restorablePushAndRemoveUntil,
            [
              newRouteBuilder,
              predicate,
            ],
            {#arguments: arguments},
          ),
        ),
        returnValueForMissingStub: _i11.dummyValue<String>(
          this,
          Invocation.method(
            #restorablePushAndRemoveUntil,
            [
              newRouteBuilder,
              predicate,
            ],
            {#arguments: arguments},
          ),
        ),
      ) as String);

  @override
  void replace<T extends Object?>({
    required _i4.Route<dynamic>? oldRoute,
    required _i4.Route<T>? newRoute,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #replace,
          [],
          {
            #oldRoute: oldRoute,
            #newRoute: newRoute,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  String restorableReplace<T extends Object?>({
    required _i4.Route<dynamic>? oldRoute,
    required _i4.RestorableRouteBuilder<T>? newRouteBuilder,
    Object? arguments,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #restorableReplace,
          [],
          {
            #oldRoute: oldRoute,
            #newRouteBuilder: newRouteBuilder,
            #arguments: arguments,
          },
        ),
        returnValue: _i11.dummyValue<String>(
          this,
          Invocation.method(
            #restorableReplace,
            [],
            {
              #oldRoute: oldRoute,
              #newRouteBuilder: newRouteBuilder,
              #arguments: arguments,
            },
          ),
        ),
        returnValueForMissingStub: _i11.dummyValue<String>(
          this,
          Invocation.method(
            #restorableReplace,
            [],
            {
              #oldRoute: oldRoute,
              #newRouteBuilder: newRouteBuilder,
              #arguments: arguments,
            },
          ),
        ),
      ) as String);

  @override
  void replaceRouteBelow<T extends Object?>({
    required _i4.Route<dynamic>? anchorRoute,
    required _i4.Route<T>? newRoute,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #replaceRouteBelow,
          [],
          {
            #anchorRoute: anchorRoute,
            #newRoute: newRoute,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  String restorableReplaceRouteBelow<T extends Object?>({
    required _i4.Route<dynamic>? anchorRoute,
    required _i4.RestorableRouteBuilder<T>? newRouteBuilder,
    Object? arguments,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #restorableReplaceRouteBelow,
          [],
          {
            #anchorRoute: anchorRoute,
            #newRouteBuilder: newRouteBuilder,
            #arguments: arguments,
          },
        ),
        returnValue: _i11.dummyValue<String>(
          this,
          Invocation.method(
            #restorableReplaceRouteBelow,
            [],
            {
              #anchorRoute: anchorRoute,
              #newRouteBuilder: newRouteBuilder,
              #arguments: arguments,
            },
          ),
        ),
        returnValueForMissingStub: _i11.dummyValue<String>(
          this,
          Invocation.method(
            #restorableReplaceRouteBelow,
            [],
            {
              #anchorRoute: anchorRoute,
              #newRouteBuilder: newRouteBuilder,
              #arguments: arguments,
            },
          ),
        ),
      ) as String);

  @override
  bool canPop() => (super.noSuchMethod(
        Invocation.method(
          #canPop,
          [],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i9.Future<bool> maybePop<T extends Object?>([T? result]) => (super.noSuchMethod(
        Invocation.method(
          #maybePop,
          [result],
        ),
        returnValue: _i9.Future<bool>.value(false),
        returnValueForMissingStub: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);

  @override
  void pop<T extends Object?>([T? result]) => super.noSuchMethod(
        Invocation.method(
          #pop,
          [result],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void popUntil(_i4.RoutePredicate? predicate) => super.noSuchMethod(
        Invocation.method(
          #popUntil,
          [predicate],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeRoute(_i4.Route<dynamic>? route) => super.noSuchMethod(
        Invocation.method(
          #removeRoute,
          [route],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeRouteBelow(_i4.Route<dynamic>? anchorRoute) => super.noSuchMethod(
        Invocation.method(
          #removeRouteBelow,
          [anchorRoute],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void finalizeRoute(_i4.Route<dynamic>? route) => super.noSuchMethod(
        Invocation.method(
          #finalizeRoute,
          [route],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didStartUserGesture() => super.noSuchMethod(
        Invocation.method(
          #didStartUserGesture,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didStopUserGesture() => super.noSuchMethod(
        Invocation.method(
          #didStopUserGesture,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Widget build(_i5.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #build,
          [context],
        ),
        returnValue: _FakeWidget_4(
          this,
          Invocation.method(
            #build,
            [context],
          ),
        ),
        returnValueForMissingStub: _FakeWidget_4(
          this,
          Invocation.method(
            #build,
            [context],
          ),
        ),
      ) as _i5.Widget);

  @override
  void reassemble() => super.noSuchMethod(
        Invocation.method(
          #reassemble,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setState(_i12.VoidCallback? fn) => super.noSuchMethod(
        Invocation.method(
          #setState,
          [fn],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void debugFillProperties(_i3.DiagnosticPropertiesBuilder? properties) => super.noSuchMethod(
        Invocation.method(
          #debugFillProperties,
          [properties],
        ),
        returnValueForMissingStub: null,
      );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) => super.toString();

  @override
  String toStringShort() => (super.noSuchMethod(
        Invocation.method(
          #toStringShort,
          [],
        ),
        returnValue: _i11.dummyValue<String>(
          this,
          Invocation.method(
            #toStringShort,
            [],
          ),
        ),
        returnValueForMissingStub: _i11.dummyValue<String>(
          this,
          Invocation.method(
            #toStringShort,
            [],
          ),
        ),
      ) as String);

  @override
  _i3.DiagnosticsNode toDiagnosticsNode({
    String? name,
    _i3.DiagnosticsTreeStyle? style,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #toDiagnosticsNode,
          [],
          {
            #name: name,
            #style: style,
          },
        ),
        returnValue: _FakeDiagnosticsNode_5(
          this,
          Invocation.method(
            #toDiagnosticsNode,
            [],
            {
              #name: name,
              #style: style,
            },
          ),
        ),
        returnValueForMissingStub: _FakeDiagnosticsNode_5(
          this,
          Invocation.method(
            #toDiagnosticsNode,
            [],
            {
              #name: name,
              #style: style,
            },
          ),
        ),
      ) as _i3.DiagnosticsNode);

  @override
  _i6.Ticker createTicker(_i6.TickerCallback? onTick) => (super.noSuchMethod(
        Invocation.method(
          #createTicker,
          [onTick],
        ),
        returnValue: _FakeTicker_6(
          this,
          Invocation.method(
            #createTicker,
            [onTick],
          ),
        ),
        returnValueForMissingStub: _FakeTicker_6(
          this,
          Invocation.method(
            #createTicker,
            [onTick],
          ),
        ),
      ) as _i6.Ticker);

  @override
  void registerForRestoration(
    _i13.RestorableProperty<Object?>? property,
    String? restorationId,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #registerForRestoration,
          [
            property,
            restorationId,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void unregisterFromRestoration(_i13.RestorableProperty<Object?>? property) => super.noSuchMethod(
        Invocation.method(
          #unregisterFromRestoration,
          [property],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didUpdateRestorationId() => super.noSuchMethod(
        Invocation.method(
          #didUpdateRestorationId,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [Mapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockMapper<I, O> extends _i1.Mock implements _i14.Mapper<I, O> {
  @override
  O map(I? input) => (super.noSuchMethod(
        Invocation.method(
          #map,
          [input],
        ),
        returnValue: _i11.dummyValue<O>(
          this,
          Invocation.method(
            #map,
            [input],
          ),
        ),
        returnValueForMissingStub: _i11.dummyValue<O>(
          this,
          Invocation.method(
            #map,
            [input],
          ),
        ),
      ) as O);

  @override
  List<O> mapList(Iterable<I>? input) => (super.noSuchMethod(
        Invocation.method(
          #mapList,
          [input],
        ),
        returnValue: <O>[],
        returnValueForMissingStub: <O>[],
      ) as List<O>);
}

/// A class which mocks [PidRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPidRepository extends _i1.Mock implements _i15.PidRepository {
  @override
  _i9.Future<String> getPidIssuanceUrl() => (super.noSuchMethod(
        Invocation.method(
          #getPidIssuanceUrl,
          [],
        ),
        returnValue: _i9.Future<String>.value(_i11.dummyValue<String>(
          this,
          Invocation.method(
            #getPidIssuanceUrl,
            [],
          ),
        )),
        returnValueForMissingStub: _i9.Future<String>.value(_i11.dummyValue<String>(
          this,
          Invocation.method(
            #getPidIssuanceUrl,
            [],
          ),
        )),
      ) as _i9.Future<String>);

  @override
  _i9.Future<List<_i16.DataAttribute>> continuePidIssuance(String? uri) => (super.noSuchMethod(
        Invocation.method(
          #continuePidIssuance,
          [uri],
        ),
        returnValue: _i9.Future<List<_i16.DataAttribute>>.value(<_i16.DataAttribute>[]),
        returnValueForMissingStub: _i9.Future<List<_i16.DataAttribute>>.value(<_i16.DataAttribute>[]),
      ) as _i9.Future<List<_i16.DataAttribute>>);

  @override
  _i9.Future<void> cancelPidIssuance() => (super.noSuchMethod(
        Invocation.method(
          #cancelPidIssuance,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<bool> hasActivePidIssuanceSession() => (super.noSuchMethod(
        Invocation.method(
          #hasActivePidIssuanceSession,
          [],
        ),
        returnValue: _i9.Future<bool>.value(false),
        returnValueForMissingStub: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);

  @override
  _i9.Future<_i7.WalletInstructionResult> acceptOfferedPid(String? pin) => (super.noSuchMethod(
        Invocation.method(
          #acceptOfferedPid,
          [pin],
        ),
        returnValue: _i9.Future<_i7.WalletInstructionResult>.value(_FakeWalletInstructionResult_7(
          this,
          Invocation.method(
            #acceptOfferedPid,
            [pin],
          ),
        )),
        returnValueForMissingStub: _i9.Future<_i7.WalletInstructionResult>.value(_FakeWalletInstructionResult_7(
          this,
          Invocation.method(
            #acceptOfferedPid,
            [pin],
          ),
        )),
      ) as _i9.Future<_i7.WalletInstructionResult>);
}

/// A class which mocks [DisclosureRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockDisclosureRepository extends _i1.Mock implements _i17.DisclosureRepository {
  @override
  _i9.Future<_i18.StartDisclosureResult> startDisclosure(
    String? disclosureUri, {
    required bool? isQrCode,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #startDisclosure,
          [disclosureUri],
          {#isQrCode: isQrCode},
        ),
        returnValue: _i9.Future<_i18.StartDisclosureResult>.value(_i11.dummyValue<_i18.StartDisclosureResult>(
          this,
          Invocation.method(
            #startDisclosure,
            [disclosureUri],
            {#isQrCode: isQrCode},
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i18.StartDisclosureResult>.value(_i11.dummyValue<_i18.StartDisclosureResult>(
          this,
          Invocation.method(
            #startDisclosure,
            [disclosureUri],
            {#isQrCode: isQrCode},
          ),
        )),
      ) as _i9.Future<_i18.StartDisclosureResult>);

  @override
  _i9.Future<void> cancelDisclosure() => (super.noSuchMethod(
        Invocation.method(
          #cancelDisclosure,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<bool> hasActiveDisclosureSession() => (super.noSuchMethod(
        Invocation.method(
          #hasActiveDisclosureSession,
          [],
        ),
        returnValue: _i9.Future<bool>.value(false),
        returnValueForMissingStub: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);

  @override
  _i9.Future<_i7.AcceptDisclosureResult> acceptDisclosure(String? pin) => (super.noSuchMethod(
        Invocation.method(
          #acceptDisclosure,
          [pin],
        ),
        returnValue: _i9.Future<_i7.AcceptDisclosureResult>.value(_FakeAcceptDisclosureResult_8(
          this,
          Invocation.method(
            #acceptDisclosure,
            [pin],
          ),
        )),
        returnValueForMissingStub: _i9.Future<_i7.AcceptDisclosureResult>.value(_FakeAcceptDisclosureResult_8(
          this,
          Invocation.method(
            #acceptDisclosure,
            [pin],
          ),
        )),
      ) as _i9.Future<_i7.AcceptDisclosureResult>);
}

/// A class which mocks [WalletRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockWalletRepository extends _i1.Mock implements _i19.WalletRepository {
  @override
  _i9.Stream<bool> get isLockedStream => (super.noSuchMethod(
        Invocation.getter(#isLockedStream),
        returnValue: _i9.Stream<bool>.empty(),
        returnValueForMissingStub: _i9.Stream<bool>.empty(),
      ) as _i9.Stream<bool>);

  @override
  _i9.Future<void> validatePin(String? pin) => (super.noSuchMethod(
        Invocation.method(
          #validatePin,
          [pin],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> createWallet(String? pin) => (super.noSuchMethod(
        Invocation.method(
          #createWallet,
          [pin],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<bool> isRegistered() => (super.noSuchMethod(
        Invocation.method(
          #isRegistered,
          [],
        ),
        returnValue: _i9.Future<bool>.value(false),
        returnValueForMissingStub: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);

  @override
  _i9.Future<_i7.WalletInstructionResult> unlockWallet(String? pin) => (super.noSuchMethod(
        Invocation.method(
          #unlockWallet,
          [pin],
        ),
        returnValue: _i9.Future<_i7.WalletInstructionResult>.value(_FakeWalletInstructionResult_7(
          this,
          Invocation.method(
            #unlockWallet,
            [pin],
          ),
        )),
        returnValueForMissingStub: _i9.Future<_i7.WalletInstructionResult>.value(_FakeWalletInstructionResult_7(
          this,
          Invocation.method(
            #unlockWallet,
            [pin],
          ),
        )),
      ) as _i9.Future<_i7.WalletInstructionResult>);

  @override
  _i9.Future<void> lockWallet() => (super.noSuchMethod(
        Invocation.method(
          #lockWallet,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<bool> containsPid() => (super.noSuchMethod(
        Invocation.method(
          #containsPid,
          [],
        ),
        returnValue: _i9.Future<bool>.value(false),
        returnValueForMissingStub: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);

  @override
  _i9.Future<void> resetWallet() => (super.noSuchMethod(
        Invocation.method(
          #resetWallet,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
}

/// A class which mocks [WalletCardRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockWalletCardRepository extends _i1.Mock implements _i20.WalletCardRepository {
  @override
  _i9.Stream<List<_i8.WalletCard>> observeWalletCards() => (super.noSuchMethod(
        Invocation.method(
          #observeWalletCards,
          [],
        ),
        returnValue: _i9.Stream<List<_i8.WalletCard>>.empty(),
        returnValueForMissingStub: _i9.Stream<List<_i8.WalletCard>>.empty(),
      ) as _i9.Stream<List<_i8.WalletCard>>);

  @override
  _i9.Future<bool> exists(String? docType) => (super.noSuchMethod(
        Invocation.method(
          #exists,
          [docType],
        ),
        returnValue: _i9.Future<bool>.value(false),
        returnValueForMissingStub: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);

  @override
  _i9.Future<List<_i8.WalletCard>> readAll() => (super.noSuchMethod(
        Invocation.method(
          #readAll,
          [],
        ),
        returnValue: _i9.Future<List<_i8.WalletCard>>.value(<_i8.WalletCard>[]),
        returnValueForMissingStub: _i9.Future<List<_i8.WalletCard>>.value(<_i8.WalletCard>[]),
      ) as _i9.Future<List<_i8.WalletCard>>);

  @override
  _i9.Future<_i8.WalletCard> read(String? docType) => (super.noSuchMethod(
        Invocation.method(
          #read,
          [docType],
        ),
        returnValue: _i9.Future<_i8.WalletCard>.value(_FakeWalletCard_9(
          this,
          Invocation.method(
            #read,
            [docType],
          ),
        )),
        returnValueForMissingStub: _i9.Future<_i8.WalletCard>.value(_FakeWalletCard_9(
          this,
          Invocation.method(
            #read,
            [docType],
          ),
        )),
      ) as _i9.Future<_i8.WalletCard>);
}

/// A class which mocks [WalletEventRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockWalletEventRepository extends _i1.Mock implements _i21.WalletEventRepository {
  @override
  _i9.Future<List<_i22.WalletEvent>> getEvents() => (super.noSuchMethod(
        Invocation.method(
          #getEvents,
          [],
        ),
        returnValue: _i9.Future<List<_i22.WalletEvent>>.value(<_i22.WalletEvent>[]),
        returnValueForMissingStub: _i9.Future<List<_i22.WalletEvent>>.value(<_i22.WalletEvent>[]),
      ) as _i9.Future<List<_i22.WalletEvent>>);

  @override
  _i9.Future<List<_i22.WalletEvent>> getEventsForCard(String? docType) => (super.noSuchMethod(
        Invocation.method(
          #getEventsForCard,
          [docType],
        ),
        returnValue: _i9.Future<List<_i22.WalletEvent>>.value(<_i22.WalletEvent>[]),
        returnValueForMissingStub: _i9.Future<List<_i22.WalletEvent>>.value(<_i22.WalletEvent>[]),
      ) as _i9.Future<List<_i22.WalletEvent>>);

  @override
  _i9.Stream<List<_i22.WalletEvent>> observeRecentEvents() => (super.noSuchMethod(
        Invocation.method(
          #observeRecentEvents,
          [],
        ),
        returnValue: _i9.Stream<List<_i22.WalletEvent>>.empty(),
        returnValueForMissingStub: _i9.Stream<List<_i22.WalletEvent>>.empty(),
      ) as _i9.Stream<List<_i22.WalletEvent>>);

  @override
  _i9.Future<_i22.DisclosureEvent?> readMostRecentDisclosureEvent(
    String? docType,
    _i22.EventStatus? status,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #readMostRecentDisclosureEvent,
          [
            docType,
            status,
          ],
        ),
        returnValue: _i9.Future<_i22.DisclosureEvent?>.value(),
        returnValueForMissingStub: _i9.Future<_i22.DisclosureEvent?>.value(),
      ) as _i9.Future<_i22.DisclosureEvent?>);

  @override
  _i9.Future<_i22.IssuanceEvent?> readMostRecentIssuanceEvent(
    String? docType,
    _i22.EventStatus? status,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #readMostRecentIssuanceEvent,
          [
            docType,
            status,
          ],
        ),
        returnValue: _i9.Future<_i22.IssuanceEvent?>.value(),
        returnValueForMissingStub: _i9.Future<_i22.IssuanceEvent?>.value(),
      ) as _i9.Future<_i22.IssuanceEvent?>);
}

/// A class which mocks [ConfigurationRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockConfigurationRepository extends _i1.Mock implements _i23.ConfigurationRepository {
  @override
  _i9.Stream<_i24.FlutterAppConfiguration> get appConfiguration => (super.noSuchMethod(
        Invocation.getter(#appConfiguration),
        returnValue: _i9.Stream<_i24.FlutterAppConfiguration>.empty(),
        returnValueForMissingStub: _i9.Stream<_i24.FlutterAppConfiguration>.empty(),
      ) as _i9.Stream<_i24.FlutterAppConfiguration>);
}

/// A class which mocks [TypedWalletCore].
///
/// See the documentation for Mockito's code generation for more information.
class MockTypedWalletCore extends _i1.Mock implements _i25.TypedWalletCore {
  @override
  _i9.Stream<bool> get isLocked => (super.noSuchMethod(
        Invocation.getter(#isLocked),
        returnValue: _i9.Stream<bool>.empty(),
        returnValueForMissingStub: _i9.Stream<bool>.empty(),
      ) as _i9.Stream<bool>);

  @override
  _i9.Future<_i7.PinValidationResult> isValidPin(String? pin) => (super.noSuchMethod(
        Invocation.method(
          #isValidPin,
          [pin],
        ),
        returnValue: _i9.Future<_i7.PinValidationResult>.value(_i7.PinValidationResult.Ok),
        returnValueForMissingStub: _i9.Future<_i7.PinValidationResult>.value(_i7.PinValidationResult.Ok),
      ) as _i9.Future<_i7.PinValidationResult>);

  @override
  _i9.Future<void> register(String? pin) => (super.noSuchMethod(
        Invocation.method(
          #register,
          [pin],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<bool> isRegistered() => (super.noSuchMethod(
        Invocation.method(
          #isRegistered,
          [],
        ),
        returnValue: _i9.Future<bool>.value(false),
        returnValueForMissingStub: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);

  @override
  _i9.Future<void> lockWallet() => (super.noSuchMethod(
        Invocation.method(
          #lockWallet,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<_i7.WalletInstructionResult> unlockWallet(String? pin) => (super.noSuchMethod(
        Invocation.method(
          #unlockWallet,
          [pin],
        ),
        returnValue: _i9.Future<_i7.WalletInstructionResult>.value(_FakeWalletInstructionResult_7(
          this,
          Invocation.method(
            #unlockWallet,
            [pin],
          ),
        )),
        returnValueForMissingStub: _i9.Future<_i7.WalletInstructionResult>.value(_FakeWalletInstructionResult_7(
          this,
          Invocation.method(
            #unlockWallet,
            [pin],
          ),
        )),
      ) as _i9.Future<_i7.WalletInstructionResult>);

  @override
  _i9.Stream<_i7.FlutterConfiguration> observeConfig() => (super.noSuchMethod(
        Invocation.method(
          #observeConfig,
          [],
        ),
        returnValue: _i9.Stream<_i7.FlutterConfiguration>.empty(),
        returnValueForMissingStub: _i9.Stream<_i7.FlutterConfiguration>.empty(),
      ) as _i9.Stream<_i7.FlutterConfiguration>);

  @override
  _i9.Future<String> createPidIssuanceRedirectUri() => (super.noSuchMethod(
        Invocation.method(
          #createPidIssuanceRedirectUri,
          [],
        ),
        returnValue: _i9.Future<String>.value(_i11.dummyValue<String>(
          this,
          Invocation.method(
            #createPidIssuanceRedirectUri,
            [],
          ),
        )),
        returnValueForMissingStub: _i9.Future<String>.value(_i11.dummyValue<String>(
          this,
          Invocation.method(
            #createPidIssuanceRedirectUri,
            [],
          ),
        )),
      ) as _i9.Future<String>);

  @override
  _i9.Future<_i7.IdentifyUriResult> identifyUri(String? uri) => (super.noSuchMethod(
        Invocation.method(
          #identifyUri,
          [uri],
        ),
        returnValue: _i9.Future<_i7.IdentifyUriResult>.value(_i7.IdentifyUriResult.PidIssuance),
        returnValueForMissingStub: _i9.Future<_i7.IdentifyUriResult>.value(_i7.IdentifyUriResult.PidIssuance),
      ) as _i9.Future<_i7.IdentifyUriResult>);

  @override
  _i9.Future<void> cancelPidIssuance() => (super.noSuchMethod(
        Invocation.method(
          #cancelPidIssuance,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<List<_i7.Card>> continuePidIssuance(String? uri) => (super.noSuchMethod(
        Invocation.method(
          #continuePidIssuance,
          [uri],
        ),
        returnValue: _i9.Future<List<_i7.Card>>.value(<_i7.Card>[]),
        returnValueForMissingStub: _i9.Future<List<_i7.Card>>.value(<_i7.Card>[]),
      ) as _i9.Future<List<_i7.Card>>);

  @override
  _i9.Future<_i7.WalletInstructionResult> acceptOfferedPid(String? pin) => (super.noSuchMethod(
        Invocation.method(
          #acceptOfferedPid,
          [pin],
        ),
        returnValue: _i9.Future<_i7.WalletInstructionResult>.value(_FakeWalletInstructionResult_7(
          this,
          Invocation.method(
            #acceptOfferedPid,
            [pin],
          ),
        )),
        returnValueForMissingStub: _i9.Future<_i7.WalletInstructionResult>.value(_FakeWalletInstructionResult_7(
          this,
          Invocation.method(
            #acceptOfferedPid,
            [pin],
          ),
        )),
      ) as _i9.Future<_i7.WalletInstructionResult>);

  @override
  _i9.Future<bool> hasActivePidIssuanceSession() => (super.noSuchMethod(
        Invocation.method(
          #hasActivePidIssuanceSession,
          [],
        ),
        returnValue: _i9.Future<bool>.value(false),
        returnValueForMissingStub: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);

  @override
  _i9.Future<_i7.StartDisclosureResult> startDisclosure(
    String? uri, {
    bool? isQrCode = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #startDisclosure,
          [uri],
          {#isQrCode: isQrCode},
        ),
        returnValue: _i9.Future<_i7.StartDisclosureResult>.value(_FakeStartDisclosureResult_10(
          this,
          Invocation.method(
            #startDisclosure,
            [uri],
            {#isQrCode: isQrCode},
          ),
        )),
        returnValueForMissingStub: _i9.Future<_i7.StartDisclosureResult>.value(_FakeStartDisclosureResult_10(
          this,
          Invocation.method(
            #startDisclosure,
            [uri],
            {#isQrCode: isQrCode},
          ),
        )),
      ) as _i9.Future<_i7.StartDisclosureResult>);

  @override
  _i9.Future<void> cancelDisclosure() => (super.noSuchMethod(
        Invocation.method(
          #cancelDisclosure,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<_i7.AcceptDisclosureResult> acceptDisclosure(String? pin) => (super.noSuchMethod(
        Invocation.method(
          #acceptDisclosure,
          [pin],
        ),
        returnValue: _i9.Future<_i7.AcceptDisclosureResult>.value(_FakeAcceptDisclosureResult_8(
          this,
          Invocation.method(
            #acceptDisclosure,
            [pin],
          ),
        )),
        returnValueForMissingStub: _i9.Future<_i7.AcceptDisclosureResult>.value(_FakeAcceptDisclosureResult_8(
          this,
          Invocation.method(
            #acceptDisclosure,
            [pin],
          ),
        )),
      ) as _i9.Future<_i7.AcceptDisclosureResult>);

  @override
  _i9.Future<bool> hasActiveDisclosureSession() => (super.noSuchMethod(
        Invocation.method(
          #hasActiveDisclosureSession,
          [],
        ),
        returnValue: _i9.Future<bool>.value(false),
        returnValueForMissingStub: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);

  @override
  _i9.Stream<List<_i7.Card>> observeCards() => (super.noSuchMethod(
        Invocation.method(
          #observeCards,
          [],
        ),
        returnValue: _i9.Stream<List<_i7.Card>>.empty(),
        returnValueForMissingStub: _i9.Stream<List<_i7.Card>>.empty(),
      ) as _i9.Stream<List<_i7.Card>>);

  @override
  _i9.Future<void> resetWallet() => (super.noSuchMethod(
        Invocation.method(
          #resetWallet,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<List<_i7.WalletEvent>> getHistory() => (super.noSuchMethod(
        Invocation.method(
          #getHistory,
          [],
        ),
        returnValue: _i9.Future<List<_i7.WalletEvent>>.value(<_i7.WalletEvent>[]),
        returnValueForMissingStub: _i9.Future<List<_i7.WalletEvent>>.value(<_i7.WalletEvent>[]),
      ) as _i9.Future<List<_i7.WalletEvent>>);

  @override
  _i9.Future<List<_i7.WalletEvent>> getHistoryForCard(String? docType) => (super.noSuchMethod(
        Invocation.method(
          #getHistoryForCard,
          [docType],
        ),
        returnValue: _i9.Future<List<_i7.WalletEvent>>.value(<_i7.WalletEvent>[]),
        returnValueForMissingStub: _i9.Future<List<_i7.WalletEvent>>.value(<_i7.WalletEvent>[]),
      ) as _i9.Future<List<_i7.WalletEvent>>);

  @override
  _i9.Stream<List<_i7.WalletEvent>> observeRecentHistory() => (super.noSuchMethod(
        Invocation.method(
          #observeRecentHistory,
          [],
        ),
        returnValue: _i9.Stream<List<_i7.WalletEvent>>.empty(),
        returnValueForMissingStub: _i9.Stream<List<_i7.WalletEvent>>.empty(),
      ) as _i9.Stream<List<_i7.WalletEvent>>);

  @override
  _i9.Future<T> call<T>(_i9.Future<T> Function(_i7.WalletCore)? runnable) => (super.noSuchMethod(
        Invocation.method(
          #call,
          [runnable],
        ),
        returnValue: _i11.ifNotNull(
              _i11.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #call,
                  [runnable],
                ),
              ),
              (T v) => _i9.Future<T>.value(v),
            ) ??
            _FakeFuture_11<T>(
              this,
              Invocation.method(
                #call,
                [runnable],
              ),
            ),
        returnValueForMissingStub: _i11.ifNotNull(
              _i11.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #call,
                  [runnable],
                ),
              ),
              (T v) => _i9.Future<T>.value(v),
            ) ??
            _FakeFuture_11<T>(
              this,
              Invocation.method(
                #call,
                [runnable],
              ),
            ),
      ) as _i9.Future<T>);
}

/// A class which mocks [NavigationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigationService extends _i1.Mock implements _i26.NavigationService {
  @override
  _i9.Future<void> handleNavigationRequest(
    _i27.NavigationRequest? request, {
    bool? queueIfNotReady = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleNavigationRequest,
          [request],
          {#queueIfNotReady: queueIfNotReady},
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<void> processQueue() => (super.noSuchMethod(
        Invocation.method(
          #processQueue,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
}

/// A class which mocks [DecodeUriUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockDecodeUriUseCase extends _i1.Mock implements _i28.DecodeUriUseCase {
  @override
  _i9.Future<_i27.NavigationRequest> invoke(Uri? uri) => (super.noSuchMethod(
        Invocation.method(
          #invoke,
          [uri],
        ),
        returnValue: _i9.Future<_i27.NavigationRequest>.value(_i11.dummyValue<_i27.NavigationRequest>(
          this,
          Invocation.method(
            #invoke,
            [uri],
          ),
        )),
        returnValueForMissingStub: _i9.Future<_i27.NavigationRequest>.value(_i11.dummyValue<_i27.NavigationRequest>(
          this,
          Invocation.method(
            #invoke,
            [uri],
          ),
        )),
      ) as _i9.Future<_i27.NavigationRequest>);
}

/// A class which mocks [IsWalletInitializedUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockIsWalletInitializedUseCase extends _i1.Mock implements _i29.IsWalletInitializedUseCase {
  @override
  _i9.Future<bool> invoke() => (super.noSuchMethod(
        Invocation.method(
          #invoke,
          [],
        ),
        returnValue: _i9.Future<bool>.value(false),
        returnValueForMissingStub: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);
}

/// A class which mocks [IsWalletInitializedWithPidUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockIsWalletInitializedWithPidUseCase extends _i1.Mock implements _i30.IsWalletInitializedWithPidUseCase {
  @override
  _i9.Future<bool> invoke() => (super.noSuchMethod(
        Invocation.method(
          #invoke,
          [],
        ),
        returnValue: _i9.Future<bool>.value(false),
        returnValueForMissingStub: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);
}

/// A class which mocks [ObserveWalletLockedUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockObserveWalletLockedUseCase extends _i1.Mock implements _i31.ObserveWalletLockedUseCase {
  @override
  _i9.Stream<bool> invoke() => (super.noSuchMethod(
        Invocation.method(
          #invoke,
          [],
        ),
        returnValue: _i9.Stream<bool>.empty(),
        returnValueForMissingStub: _i9.Stream<bool>.empty(),
      ) as _i9.Stream<bool>);
}

/// A class which mocks [CheckPinUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockCheckPinUseCase extends _i1.Mock implements _i32.CheckPinUseCase {
  @override
  _i9.Future<_i33.CheckPinResult> invoke(String? pin) => (super.noSuchMethod(
        Invocation.method(
          #invoke,
          [pin],
        ),
        returnValue: _i9.Future<_i33.CheckPinResult>.value(_i11.dummyValue<_i33.CheckPinResult>(
          this,
          Invocation.method(
            #invoke,
            [pin],
          ),
        )),
        returnValueForMissingStub: _i9.Future<_i33.CheckPinResult>.value(_i11.dummyValue<_i33.CheckPinResult>(
          this,
          Invocation.method(
            #invoke,
            [pin],
          ),
        )),
      ) as _i9.Future<_i33.CheckPinResult>);
}

/// A class which mocks [SetupMockedWalletUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockSetupMockedWalletUseCase extends _i1.Mock implements _i34.SetupMockedWalletUseCase {
  @override
  _i9.Future<void> invoke() => (super.noSuchMethod(
        Invocation.method(
          #invoke,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
}

/// A class which mocks [CheckHasInternetUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockCheckHasInternetUseCase extends _i1.Mock implements _i35.CheckHasInternetUseCase {
  @override
  _i9.Future<bool> invoke() => (super.noSuchMethod(
        Invocation.method(
          #invoke,
          [],
        ),
        returnValue: _i9.Future<bool>.value(false),
        returnValueForMissingStub: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);
}

/// A class which mocks [PerformPreNavigationActionsUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockPerformPreNavigationActionsUseCase extends _i1.Mock implements _i27.PerformPreNavigationActionsUseCase {
  @override
  _i9.Future<void> invoke(List<_i27.PreNavigationAction>? actions) => (super.noSuchMethod(
        Invocation.method(
          #invoke,
          [actions],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
}

/// A class which mocks [CheckNavigationPrerequisitesUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockCheckNavigationPrerequisitesUseCase extends _i1.Mock implements _i36.CheckNavigationPrerequisitesUseCase {
  @override
  _i9.Future<bool> invoke(List<_i27.NavigationPrerequisite>? prerequisites) => (super.noSuchMethod(
        Invocation.method(
          #invoke,
          [prerequisites],
        ),
        returnValue: _i9.Future<bool>.value(false),
        returnValueForMissingStub: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);
}

/// A class which mocks [AcceptOfferedPidUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockAcceptOfferedPidUseCase extends _i1.Mock implements _i37.AcceptOfferedPidUseCase {
  @override
  _i9.Future<_i33.CheckPinResult> invoke(String? pin) => (super.noSuchMethod(
        Invocation.method(
          #invoke,
          [pin],
        ),
        returnValue: _i9.Future<_i33.CheckPinResult>.value(_i11.dummyValue<_i33.CheckPinResult>(
          this,
          Invocation.method(
            #invoke,
            [pin],
          ),
        )),
        returnValueForMissingStub: _i9.Future<_i33.CheckPinResult>.value(_i11.dummyValue<_i33.CheckPinResult>(
          this,
          Invocation.method(
            #invoke,
            [pin],
          ),
        )),
      ) as _i9.Future<_i33.CheckPinResult>);
}

/// A class which mocks [AcceptSignAgreementUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockAcceptSignAgreementUseCase extends _i1.Mock implements _i38.AcceptSignAgreementUseCase {
  @override
  _i9.Future<_i33.CheckPinResult> invoke(String? pin) => (super.noSuchMethod(
        Invocation.method(
          #invoke,
          [pin],
        ),
        returnValue: _i9.Future<_i33.CheckPinResult>.value(_i11.dummyValue<_i33.CheckPinResult>(
          this,
          Invocation.method(
            #invoke,
            [pin],
          ),
        )),
        returnValueForMissingStub: _i9.Future<_i33.CheckPinResult>.value(_i11.dummyValue<_i33.CheckPinResult>(
          this,
          Invocation.method(
            #invoke,
            [pin],
          ),
        )),
      ) as _i9.Future<_i33.CheckPinResult>);
}

/// A class which mocks [AcceptDisclosureUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockAcceptDisclosureUseCase extends _i1.Mock implements _i39.AcceptDisclosureUseCase {
  @override
  _i9.Future<_i33.CheckPinResult> invoke(String? pin) => (super.noSuchMethod(
        Invocation.method(
          #invoke,
          [pin],
        ),
        returnValue: _i9.Future<_i33.CheckPinResult>.value(_i11.dummyValue<_i33.CheckPinResult>(
          this,
          Invocation.method(
            #invoke,
            [pin],
          ),
        )),
        returnValueForMissingStub: _i9.Future<_i33.CheckPinResult>.value(_i11.dummyValue<_i33.CheckPinResult>(
          this,
          Invocation.method(
            #invoke,
            [pin],
          ),
        )),
      ) as _i9.Future<_i33.CheckPinResult>);
}

/// A class which mocks [AcceptIssuanceUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockAcceptIssuanceUseCase extends _i1.Mock implements _i40.AcceptIssuanceUseCase {
  @override
  _i9.Future<void> invoke(Iterable<String>? cardDocTypes) => (super.noSuchMethod(
        Invocation.method(
          #invoke,
          [cardDocTypes],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
}

/// A class which mocks [StartDisclosureUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockStartDisclosureUseCase extends _i1.Mock implements _i41.StartDisclosureUseCase {
  @override
  _i9.Future<_i18.StartDisclosureResult> invoke(
    String? disclosureUri, {
    bool? isQrCode = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #invoke,
          [disclosureUri],
          {#isQrCode: isQrCode},
        ),
        returnValue: _i9.Future<_i18.StartDisclosureResult>.value(_i11.dummyValue<_i18.StartDisclosureResult>(
          this,
          Invocation.method(
            #invoke,
            [disclosureUri],
            {#isQrCode: isQrCode},
          ),
        )),
        returnValueForMissingStub:
            _i9.Future<_i18.StartDisclosureResult>.value(_i11.dummyValue<_i18.StartDisclosureResult>(
          this,
          Invocation.method(
            #invoke,
            [disclosureUri],
            {#isQrCode: isQrCode},
          ),
        )),
      ) as _i9.Future<_i18.StartDisclosureResult>);
}

/// A class which mocks [CancelDisclosureUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockCancelDisclosureUseCase extends _i1.Mock implements _i42.CancelDisclosureUseCase {
  @override
  _i9.Future<void> invoke() => (super.noSuchMethod(
        Invocation.method(
          #invoke,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
}

/// A class which mocks [ObserveWalletCardsUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockObserveWalletCardsUseCase extends _i1.Mock implements _i43.ObserveWalletCardsUseCase {
  @override
  _i9.Stream<List<_i8.WalletCard>> invoke() => (super.noSuchMethod(
        Invocation.method(
          #invoke,
          [],
        ),
        returnValue: _i9.Stream<List<_i8.WalletCard>>.empty(),
        returnValueForMissingStub: _i9.Stream<List<_i8.WalletCard>>.empty(),
      ) as _i9.Stream<List<_i8.WalletCard>>);
}

/// A class which mocks [ObserveRecentHistoryUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockObserveRecentHistoryUseCase extends _i1.Mock implements _i44.ObserveRecentHistoryUseCase {
  @override
  _i9.Stream<List<_i22.WalletEvent>> invoke() => (super.noSuchMethod(
        Invocation.method(
          #invoke,
          [],
        ),
        returnValue: _i9.Stream<List<_i22.WalletEvent>>.empty(),
        returnValueForMissingStub: _i9.Stream<List<_i22.WalletEvent>>.empty(),
      ) as _i9.Stream<List<_i22.WalletEvent>>);
}

/// A class which mocks [CheckIsValidPinUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockCheckIsValidPinUseCase extends _i1.Mock implements _i45.CheckIsValidPinUseCase {
  @override
  _i9.Future<void> invoke(String? pin) => (super.noSuchMethod(
        Invocation.method(
          #invoke,
          [pin],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
}

/// A class which mocks [CreateWalletUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockCreateWalletUseCase extends _i1.Mock implements _i46.CreateWalletUseCase {
  @override
  _i9.Future<void> invoke(String? pin) => (super.noSuchMethod(
        Invocation.method(
          #invoke,
          [pin],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
}

/// A class which mocks [UnlockWalletWithPinUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockUnlockWalletWithPinUseCase extends _i1.Mock implements _i47.UnlockWalletWithPinUseCase {
  @override
  _i9.Future<_i33.CheckPinResult> invoke(String? pin) => (super.noSuchMethod(
        Invocation.method(
          #invoke,
          [pin],
        ),
        returnValue: _i9.Future<_i33.CheckPinResult>.value(_i11.dummyValue<_i33.CheckPinResult>(
          this,
          Invocation.method(
            #invoke,
            [pin],
          ),
        )),
        returnValueForMissingStub: _i9.Future<_i33.CheckPinResult>.value(_i11.dummyValue<_i33.CheckPinResult>(
          this,
          Invocation.method(
            #invoke,
            [pin],
          ),
        )),
      ) as _i9.Future<_i33.CheckPinResult>);
}

/// A class which mocks [ResetWalletUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockResetWalletUseCase extends _i1.Mock implements _i48.ResetWalletUseCase {
  @override
  _i9.Future<void> invoke() => (super.noSuchMethod(
        Invocation.method(
          #invoke,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
}

/// A class which mocks [WalletCore].
///
/// See the documentation for Mockito's code generation for more information.
class MockWalletCore extends _i1.Mock implements _i7.WalletCore {
  @override
  _i7.FlutterRustBridgeTaskConstMeta get kInitConstMeta => (super.noSuchMethod(
        Invocation.getter(#kInitConstMeta),
        returnValue: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kInitConstMeta),
        ),
        returnValueForMissingStub: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kInitConstMeta),
        ),
      ) as _i7.FlutterRustBridgeTaskConstMeta);

  @override
  _i7.FlutterRustBridgeTaskConstMeta get kIsInitializedConstMeta => (super.noSuchMethod(
        Invocation.getter(#kIsInitializedConstMeta),
        returnValue: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kIsInitializedConstMeta),
        ),
        returnValueForMissingStub: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kIsInitializedConstMeta),
        ),
      ) as _i7.FlutterRustBridgeTaskConstMeta);

  @override
  _i7.FlutterRustBridgeTaskConstMeta get kIsValidPinConstMeta => (super.noSuchMethod(
        Invocation.getter(#kIsValidPinConstMeta),
        returnValue: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kIsValidPinConstMeta),
        ),
        returnValueForMissingStub: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kIsValidPinConstMeta),
        ),
      ) as _i7.FlutterRustBridgeTaskConstMeta);

  @override
  _i7.FlutterRustBridgeTaskConstMeta get kSetLockStreamConstMeta => (super.noSuchMethod(
        Invocation.getter(#kSetLockStreamConstMeta),
        returnValue: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kSetLockStreamConstMeta),
        ),
        returnValueForMissingStub: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kSetLockStreamConstMeta),
        ),
      ) as _i7.FlutterRustBridgeTaskConstMeta);

  @override
  _i7.FlutterRustBridgeTaskConstMeta get kClearLockStreamConstMeta => (super.noSuchMethod(
        Invocation.getter(#kClearLockStreamConstMeta),
        returnValue: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kClearLockStreamConstMeta),
        ),
        returnValueForMissingStub: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kClearLockStreamConstMeta),
        ),
      ) as _i7.FlutterRustBridgeTaskConstMeta);

  @override
  _i7.FlutterRustBridgeTaskConstMeta get kSetConfigurationStreamConstMeta => (super.noSuchMethod(
        Invocation.getter(#kSetConfigurationStreamConstMeta),
        returnValue: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kSetConfigurationStreamConstMeta),
        ),
        returnValueForMissingStub: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kSetConfigurationStreamConstMeta),
        ),
      ) as _i7.FlutterRustBridgeTaskConstMeta);

  @override
  _i7.FlutterRustBridgeTaskConstMeta get kClearConfigurationStreamConstMeta => (super.noSuchMethod(
        Invocation.getter(#kClearConfigurationStreamConstMeta),
        returnValue: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kClearConfigurationStreamConstMeta),
        ),
        returnValueForMissingStub: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kClearConfigurationStreamConstMeta),
        ),
      ) as _i7.FlutterRustBridgeTaskConstMeta);

  @override
  _i7.FlutterRustBridgeTaskConstMeta get kSetCardsStreamConstMeta => (super.noSuchMethod(
        Invocation.getter(#kSetCardsStreamConstMeta),
        returnValue: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kSetCardsStreamConstMeta),
        ),
        returnValueForMissingStub: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kSetCardsStreamConstMeta),
        ),
      ) as _i7.FlutterRustBridgeTaskConstMeta);

  @override
  _i7.FlutterRustBridgeTaskConstMeta get kClearCardsStreamConstMeta => (super.noSuchMethod(
        Invocation.getter(#kClearCardsStreamConstMeta),
        returnValue: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kClearCardsStreamConstMeta),
        ),
        returnValueForMissingStub: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kClearCardsStreamConstMeta),
        ),
      ) as _i7.FlutterRustBridgeTaskConstMeta);

  @override
  _i7.FlutterRustBridgeTaskConstMeta get kSetRecentHistoryStreamConstMeta => (super.noSuchMethod(
        Invocation.getter(#kSetRecentHistoryStreamConstMeta),
        returnValue: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kSetRecentHistoryStreamConstMeta),
        ),
        returnValueForMissingStub: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kSetRecentHistoryStreamConstMeta),
        ),
      ) as _i7.FlutterRustBridgeTaskConstMeta);

  @override
  _i7.FlutterRustBridgeTaskConstMeta get kClearRecentHistoryStreamConstMeta => (super.noSuchMethod(
        Invocation.getter(#kClearRecentHistoryStreamConstMeta),
        returnValue: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kClearRecentHistoryStreamConstMeta),
        ),
        returnValueForMissingStub: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kClearRecentHistoryStreamConstMeta),
        ),
      ) as _i7.FlutterRustBridgeTaskConstMeta);

  @override
  _i7.FlutterRustBridgeTaskConstMeta get kUnlockWalletConstMeta => (super.noSuchMethod(
        Invocation.getter(#kUnlockWalletConstMeta),
        returnValue: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kUnlockWalletConstMeta),
        ),
        returnValueForMissingStub: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kUnlockWalletConstMeta),
        ),
      ) as _i7.FlutterRustBridgeTaskConstMeta);

  @override
  _i7.FlutterRustBridgeTaskConstMeta get kLockWalletConstMeta => (super.noSuchMethod(
        Invocation.getter(#kLockWalletConstMeta),
        returnValue: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kLockWalletConstMeta),
        ),
        returnValueForMissingStub: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kLockWalletConstMeta),
        ),
      ) as _i7.FlutterRustBridgeTaskConstMeta);

  @override
  _i7.FlutterRustBridgeTaskConstMeta get kHasRegistrationConstMeta => (super.noSuchMethod(
        Invocation.getter(#kHasRegistrationConstMeta),
        returnValue: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kHasRegistrationConstMeta),
        ),
        returnValueForMissingStub: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kHasRegistrationConstMeta),
        ),
      ) as _i7.FlutterRustBridgeTaskConstMeta);

  @override
  _i7.FlutterRustBridgeTaskConstMeta get kRegisterConstMeta => (super.noSuchMethod(
        Invocation.getter(#kRegisterConstMeta),
        returnValue: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kRegisterConstMeta),
        ),
        returnValueForMissingStub: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kRegisterConstMeta),
        ),
      ) as _i7.FlutterRustBridgeTaskConstMeta);

  @override
  _i7.FlutterRustBridgeTaskConstMeta get kIdentifyUriConstMeta => (super.noSuchMethod(
        Invocation.getter(#kIdentifyUriConstMeta),
        returnValue: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kIdentifyUriConstMeta),
        ),
        returnValueForMissingStub: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kIdentifyUriConstMeta),
        ),
      ) as _i7.FlutterRustBridgeTaskConstMeta);

  @override
  _i7.FlutterRustBridgeTaskConstMeta get kCreatePidIssuanceRedirectUriConstMeta => (super.noSuchMethod(
        Invocation.getter(#kCreatePidIssuanceRedirectUriConstMeta),
        returnValue: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kCreatePidIssuanceRedirectUriConstMeta),
        ),
        returnValueForMissingStub: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kCreatePidIssuanceRedirectUriConstMeta),
        ),
      ) as _i7.FlutterRustBridgeTaskConstMeta);

  @override
  _i7.FlutterRustBridgeTaskConstMeta get kCancelPidIssuanceConstMeta => (super.noSuchMethod(
        Invocation.getter(#kCancelPidIssuanceConstMeta),
        returnValue: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kCancelPidIssuanceConstMeta),
        ),
        returnValueForMissingStub: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kCancelPidIssuanceConstMeta),
        ),
      ) as _i7.FlutterRustBridgeTaskConstMeta);

  @override
  _i7.FlutterRustBridgeTaskConstMeta get kContinuePidIssuanceConstMeta => (super.noSuchMethod(
        Invocation.getter(#kContinuePidIssuanceConstMeta),
        returnValue: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kContinuePidIssuanceConstMeta),
        ),
        returnValueForMissingStub: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kContinuePidIssuanceConstMeta),
        ),
      ) as _i7.FlutterRustBridgeTaskConstMeta);

  @override
  _i7.FlutterRustBridgeTaskConstMeta get kAcceptPidIssuanceConstMeta => (super.noSuchMethod(
        Invocation.getter(#kAcceptPidIssuanceConstMeta),
        returnValue: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kAcceptPidIssuanceConstMeta),
        ),
        returnValueForMissingStub: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kAcceptPidIssuanceConstMeta),
        ),
      ) as _i7.FlutterRustBridgeTaskConstMeta);

  @override
  _i7.FlutterRustBridgeTaskConstMeta get kHasActivePidIssuanceSessionConstMeta => (super.noSuchMethod(
        Invocation.getter(#kHasActivePidIssuanceSessionConstMeta),
        returnValue: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kHasActivePidIssuanceSessionConstMeta),
        ),
        returnValueForMissingStub: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kHasActivePidIssuanceSessionConstMeta),
        ),
      ) as _i7.FlutterRustBridgeTaskConstMeta);

  @override
  _i7.FlutterRustBridgeTaskConstMeta get kStartDisclosureConstMeta => (super.noSuchMethod(
        Invocation.getter(#kStartDisclosureConstMeta),
        returnValue: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kStartDisclosureConstMeta),
        ),
        returnValueForMissingStub: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kStartDisclosureConstMeta),
        ),
      ) as _i7.FlutterRustBridgeTaskConstMeta);

  @override
  _i7.FlutterRustBridgeTaskConstMeta get kCancelDisclosureConstMeta => (super.noSuchMethod(
        Invocation.getter(#kCancelDisclosureConstMeta),
        returnValue: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kCancelDisclosureConstMeta),
        ),
        returnValueForMissingStub: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kCancelDisclosureConstMeta),
        ),
      ) as _i7.FlutterRustBridgeTaskConstMeta);

  @override
  _i7.FlutterRustBridgeTaskConstMeta get kAcceptDisclosureConstMeta => (super.noSuchMethod(
        Invocation.getter(#kAcceptDisclosureConstMeta),
        returnValue: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kAcceptDisclosureConstMeta),
        ),
        returnValueForMissingStub: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kAcceptDisclosureConstMeta),
        ),
      ) as _i7.FlutterRustBridgeTaskConstMeta);

  @override
  _i7.FlutterRustBridgeTaskConstMeta get kHasActiveDisclosureSessionConstMeta => (super.noSuchMethod(
        Invocation.getter(#kHasActiveDisclosureSessionConstMeta),
        returnValue: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kHasActiveDisclosureSessionConstMeta),
        ),
        returnValueForMissingStub: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kHasActiveDisclosureSessionConstMeta),
        ),
      ) as _i7.FlutterRustBridgeTaskConstMeta);

  @override
  _i7.FlutterRustBridgeTaskConstMeta get kGetHistoryConstMeta => (super.noSuchMethod(
        Invocation.getter(#kGetHistoryConstMeta),
        returnValue: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kGetHistoryConstMeta),
        ),
        returnValueForMissingStub: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kGetHistoryConstMeta),
        ),
      ) as _i7.FlutterRustBridgeTaskConstMeta);

  @override
  _i7.FlutterRustBridgeTaskConstMeta get kGetHistoryForCardConstMeta => (super.noSuchMethod(
        Invocation.getter(#kGetHistoryForCardConstMeta),
        returnValue: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kGetHistoryForCardConstMeta),
        ),
        returnValueForMissingStub: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kGetHistoryForCardConstMeta),
        ),
      ) as _i7.FlutterRustBridgeTaskConstMeta);

  @override
  _i7.FlutterRustBridgeTaskConstMeta get kResetWalletConstMeta => (super.noSuchMethod(
        Invocation.getter(#kResetWalletConstMeta),
        returnValue: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kResetWalletConstMeta),
        ),
        returnValueForMissingStub: _FakeFlutterRustBridgeTaskConstMeta_12(
          this,
          Invocation.getter(#kResetWalletConstMeta),
        ),
      ) as _i7.FlutterRustBridgeTaskConstMeta);

  @override
  _i9.Future<void> init({dynamic hint}) => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
          {#hint: hint},
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<bool> isInitialized({dynamic hint}) => (super.noSuchMethod(
        Invocation.method(
          #isInitialized,
          [],
          {#hint: hint},
        ),
        returnValue: _i9.Future<bool>.value(false),
        returnValueForMissingStub: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);

  @override
  _i9.Future<_i7.PinValidationResult> isValidPin({
    required String? pin,
    dynamic hint,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #isValidPin,
          [],
          {
            #pin: pin,
            #hint: hint,
          },
        ),
        returnValue: _i9.Future<_i7.PinValidationResult>.value(_i7.PinValidationResult.Ok),
        returnValueForMissingStub: _i9.Future<_i7.PinValidationResult>.value(_i7.PinValidationResult.Ok),
      ) as _i9.Future<_i7.PinValidationResult>);

  @override
  _i9.Stream<bool> setLockStream({dynamic hint}) => (super.noSuchMethod(
        Invocation.method(
          #setLockStream,
          [],
          {#hint: hint},
        ),
        returnValue: _i9.Stream<bool>.empty(),
        returnValueForMissingStub: _i9.Stream<bool>.empty(),
      ) as _i9.Stream<bool>);

  @override
  _i9.Future<void> clearLockStream({dynamic hint}) => (super.noSuchMethod(
        Invocation.method(
          #clearLockStream,
          [],
          {#hint: hint},
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Stream<_i7.FlutterConfiguration> setConfigurationStream({dynamic hint}) => (super.noSuchMethod(
        Invocation.method(
          #setConfigurationStream,
          [],
          {#hint: hint},
        ),
        returnValue: _i9.Stream<_i7.FlutterConfiguration>.empty(),
        returnValueForMissingStub: _i9.Stream<_i7.FlutterConfiguration>.empty(),
      ) as _i9.Stream<_i7.FlutterConfiguration>);

  @override
  _i9.Future<void> clearConfigurationStream({dynamic hint}) => (super.noSuchMethod(
        Invocation.method(
          #clearConfigurationStream,
          [],
          {#hint: hint},
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Stream<List<_i7.Card>> setCardsStream({dynamic hint}) => (super.noSuchMethod(
        Invocation.method(
          #setCardsStream,
          [],
          {#hint: hint},
        ),
        returnValue: _i9.Stream<List<_i7.Card>>.empty(),
        returnValueForMissingStub: _i9.Stream<List<_i7.Card>>.empty(),
      ) as _i9.Stream<List<_i7.Card>>);

  @override
  _i9.Future<void> clearCardsStream({dynamic hint}) => (super.noSuchMethod(
        Invocation.method(
          #clearCardsStream,
          [],
          {#hint: hint},
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Stream<List<_i7.WalletEvent>> setRecentHistoryStream({dynamic hint}) => (super.noSuchMethod(
        Invocation.method(
          #setRecentHistoryStream,
          [],
          {#hint: hint},
        ),
        returnValue: _i9.Stream<List<_i7.WalletEvent>>.empty(),
        returnValueForMissingStub: _i9.Stream<List<_i7.WalletEvent>>.empty(),
      ) as _i9.Stream<List<_i7.WalletEvent>>);

  @override
  _i9.Future<void> clearRecentHistoryStream({dynamic hint}) => (super.noSuchMethod(
        Invocation.method(
          #clearRecentHistoryStream,
          [],
          {#hint: hint},
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<_i7.WalletInstructionResult> unlockWallet({
    required String? pin,
    dynamic hint,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #unlockWallet,
          [],
          {
            #pin: pin,
            #hint: hint,
          },
        ),
        returnValue: _i9.Future<_i7.WalletInstructionResult>.value(_FakeWalletInstructionResult_7(
          this,
          Invocation.method(
            #unlockWallet,
            [],
            {
              #pin: pin,
              #hint: hint,
            },
          ),
        )),
        returnValueForMissingStub: _i9.Future<_i7.WalletInstructionResult>.value(_FakeWalletInstructionResult_7(
          this,
          Invocation.method(
            #unlockWallet,
            [],
            {
              #pin: pin,
              #hint: hint,
            },
          ),
        )),
      ) as _i9.Future<_i7.WalletInstructionResult>);

  @override
  _i9.Future<void> lockWallet({dynamic hint}) => (super.noSuchMethod(
        Invocation.method(
          #lockWallet,
          [],
          {#hint: hint},
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<bool> hasRegistration({dynamic hint}) => (super.noSuchMethod(
        Invocation.method(
          #hasRegistration,
          [],
          {#hint: hint},
        ),
        returnValue: _i9.Future<bool>.value(false),
        returnValueForMissingStub: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);

  @override
  _i9.Future<void> register({
    required String? pin,
    dynamic hint,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #register,
          [],
          {
            #pin: pin,
            #hint: hint,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<_i7.IdentifyUriResult> identifyUri({
    required String? uri,
    dynamic hint,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #identifyUri,
          [],
          {
            #uri: uri,
            #hint: hint,
          },
        ),
        returnValue: _i9.Future<_i7.IdentifyUriResult>.value(_i7.IdentifyUriResult.PidIssuance),
        returnValueForMissingStub: _i9.Future<_i7.IdentifyUriResult>.value(_i7.IdentifyUriResult.PidIssuance),
      ) as _i9.Future<_i7.IdentifyUriResult>);

  @override
  _i9.Future<String> createPidIssuanceRedirectUri({dynamic hint}) => (super.noSuchMethod(
        Invocation.method(
          #createPidIssuanceRedirectUri,
          [],
          {#hint: hint},
        ),
        returnValue: _i9.Future<String>.value(_i11.dummyValue<String>(
          this,
          Invocation.method(
            #createPidIssuanceRedirectUri,
            [],
            {#hint: hint},
          ),
        )),
        returnValueForMissingStub: _i9.Future<String>.value(_i11.dummyValue<String>(
          this,
          Invocation.method(
            #createPidIssuanceRedirectUri,
            [],
            {#hint: hint},
          ),
        )),
      ) as _i9.Future<String>);

  @override
  _i9.Future<void> cancelPidIssuance({dynamic hint}) => (super.noSuchMethod(
        Invocation.method(
          #cancelPidIssuance,
          [],
          {#hint: hint},
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<List<_i7.Card>> continuePidIssuance({
    required String? uri,
    dynamic hint,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #continuePidIssuance,
          [],
          {
            #uri: uri,
            #hint: hint,
          },
        ),
        returnValue: _i9.Future<List<_i7.Card>>.value(<_i7.Card>[]),
        returnValueForMissingStub: _i9.Future<List<_i7.Card>>.value(<_i7.Card>[]),
      ) as _i9.Future<List<_i7.Card>>);

  @override
  _i9.Future<_i7.WalletInstructionResult> acceptPidIssuance({
    required String? pin,
    dynamic hint,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #acceptPidIssuance,
          [],
          {
            #pin: pin,
            #hint: hint,
          },
        ),
        returnValue: _i9.Future<_i7.WalletInstructionResult>.value(_FakeWalletInstructionResult_7(
          this,
          Invocation.method(
            #acceptPidIssuance,
            [],
            {
              #pin: pin,
              #hint: hint,
            },
          ),
        )),
        returnValueForMissingStub: _i9.Future<_i7.WalletInstructionResult>.value(_FakeWalletInstructionResult_7(
          this,
          Invocation.method(
            #acceptPidIssuance,
            [],
            {
              #pin: pin,
              #hint: hint,
            },
          ),
        )),
      ) as _i9.Future<_i7.WalletInstructionResult>);

  @override
  _i9.Future<bool> hasActivePidIssuanceSession({dynamic hint}) => (super.noSuchMethod(
        Invocation.method(
          #hasActivePidIssuanceSession,
          [],
          {#hint: hint},
        ),
        returnValue: _i9.Future<bool>.value(false),
        returnValueForMissingStub: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);

  @override
  _i9.Future<_i7.StartDisclosureResult> startDisclosure({
    required String? uri,
    required bool? isQrCode,
    dynamic hint,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #startDisclosure,
          [],
          {
            #uri: uri,
            #isQrCode: isQrCode,
            #hint: hint,
          },
        ),
        returnValue: _i9.Future<_i7.StartDisclosureResult>.value(_FakeStartDisclosureResult_10(
          this,
          Invocation.method(
            #startDisclosure,
            [],
            {
              #uri: uri,
              #isQrCode: isQrCode,
              #hint: hint,
            },
          ),
        )),
        returnValueForMissingStub: _i9.Future<_i7.StartDisclosureResult>.value(_FakeStartDisclosureResult_10(
          this,
          Invocation.method(
            #startDisclosure,
            [],
            {
              #uri: uri,
              #isQrCode: isQrCode,
              #hint: hint,
            },
          ),
        )),
      ) as _i9.Future<_i7.StartDisclosureResult>);

  @override
  _i9.Future<void> cancelDisclosure({dynamic hint}) => (super.noSuchMethod(
        Invocation.method(
          #cancelDisclosure,
          [],
          {#hint: hint},
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);

  @override
  _i9.Future<_i7.AcceptDisclosureResult> acceptDisclosure({
    required String? pin,
    dynamic hint,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #acceptDisclosure,
          [],
          {
            #pin: pin,
            #hint: hint,
          },
        ),
        returnValue: _i9.Future<_i7.AcceptDisclosureResult>.value(_FakeAcceptDisclosureResult_8(
          this,
          Invocation.method(
            #acceptDisclosure,
            [],
            {
              #pin: pin,
              #hint: hint,
            },
          ),
        )),
        returnValueForMissingStub: _i9.Future<_i7.AcceptDisclosureResult>.value(_FakeAcceptDisclosureResult_8(
          this,
          Invocation.method(
            #acceptDisclosure,
            [],
            {
              #pin: pin,
              #hint: hint,
            },
          ),
        )),
      ) as _i9.Future<_i7.AcceptDisclosureResult>);

  @override
  _i9.Future<bool> hasActiveDisclosureSession({dynamic hint}) => (super.noSuchMethod(
        Invocation.method(
          #hasActiveDisclosureSession,
          [],
          {#hint: hint},
        ),
        returnValue: _i9.Future<bool>.value(false),
        returnValueForMissingStub: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);

  @override
  _i9.Future<List<_i7.WalletEvent>> getHistory({dynamic hint}) => (super.noSuchMethod(
        Invocation.method(
          #getHistory,
          [],
          {#hint: hint},
        ),
        returnValue: _i9.Future<List<_i7.WalletEvent>>.value(<_i7.WalletEvent>[]),
        returnValueForMissingStub: _i9.Future<List<_i7.WalletEvent>>.value(<_i7.WalletEvent>[]),
      ) as _i9.Future<List<_i7.WalletEvent>>);

  @override
  _i9.Future<List<_i7.WalletEvent>> getHistoryForCard({
    required String? docType,
    dynamic hint,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getHistoryForCard,
          [],
          {
            #docType: docType,
            #hint: hint,
          },
        ),
        returnValue: _i9.Future<List<_i7.WalletEvent>>.value(<_i7.WalletEvent>[]),
        returnValueForMissingStub: _i9.Future<List<_i7.WalletEvent>>.value(<_i7.WalletEvent>[]),
      ) as _i9.Future<List<_i7.WalletEvent>>);

  @override
  _i9.Future<void> resetWallet({dynamic hint}) => (super.noSuchMethod(
        Invocation.method(
          #resetWallet,
          [],
          {#hint: hint},
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
}
