// Mocks generated by Mockito 5.4.2 from annotations
// in wallet/test/src/mocks/wallet_mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i10;
import 'dart:ui' as _i7;

import 'package:flutter_rust_bridge/flutter_rust_bridge.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i8;
import 'package:wallet/bridge_generated.dart' as _i2;
import 'package:wallet/src/data/repository/card/timeline_attribute_repository.dart' as _i17;
import 'package:wallet/src/data/repository/card/wallet_card_repository.dart' as _i14;
import 'package:wallet/src/data/repository/organization/organization_repository.dart' as _i15;
import 'package:wallet/src/data/repository/pid/pid_repository.dart' as _i9;
import 'package:wallet/src/data/repository/wallet/wallet_repository.dart' as _i12;
import 'package:wallet/src/data/service/navigation_service.dart' as _i21;
import 'package:wallet/src/domain/model/attribute/data_attribute.dart' as _i11;
import 'package:wallet/src/domain/model/organization.dart' as _i16;
import 'package:wallet/src/domain/model/timeline/interaction_timeline_attribute.dart' as _i18;
import 'package:wallet/src/domain/model/timeline/operation_timeline_attribute.dart' as _i19;
import 'package:wallet/src/domain/model/timeline/timeline_attribute.dart' as _i4;
import 'package:wallet/src/domain/model/wallet_card.dart' as _i3;
import 'package:wallet/src/domain/usecase/app/check_is_app_initialized_usecase.dart' as _i24;
import 'package:wallet/src/domain/usecase/navigation/check_navigation_prerequisites_usecase.dart' as _i30;
import 'package:wallet/src/domain/usecase/navigation/perform_pre_navigation_actions_usecase.dart' as _i22;
import 'package:wallet/src/domain/usecase/network/check_has_internet_usecase.dart' as _i28;
import 'package:wallet/src/domain/usecase/pid/accept_offered_pid_usecase.dart' as _i29;
import 'package:wallet/src/domain/usecase/pin/unlock_wallet_with_pin_usecase.dart' as _i13;
import 'package:wallet/src/domain/usecase/uri/decode_uri_usecase.dart' as _i23;
import 'package:wallet/src/domain/usecase/wallet/is_wallet_initialized_with_pid_usecase.dart' as _i25;
import 'package:wallet/src/domain/usecase/wallet/observe_wallet_locked_usecase.dart' as _i26;
import 'package:wallet/src/domain/usecase/wallet/setup_mocked_wallet_usecase.dart' as _i27;
import 'package:wallet/src/util/mapper/locale_mapper.dart' as _i6;
import 'package:wallet/src/wallet_core/typed/typed_wallet_core.dart' as _i20;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeWalletInstructionResult_0 extends _i1.SmartFake implements _i2.WalletInstructionResult {
  _FakeWalletInstructionResult_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWalletCard_1 extends _i1.SmartFake implements _i3.WalletCard {
  _FakeWalletCard_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTimelineAttribute_2 extends _i1.SmartFake implements _i4.TimelineAttribute {
  _FakeTimelineAttribute_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDisclosureResult_3 extends _i1.SmartFake implements _i2.DisclosureResult {
  _FakeDisclosureResult_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFlutterRustBridgeTaskConstMeta_4 extends _i1.SmartFake implements _i5.FlutterRustBridgeTaskConstMeta {
  _FakeFlutterRustBridgeTaskConstMeta_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [LocaleMapper].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocaleMapper<I, O> extends _i1.Mock implements _i6.LocaleMapper<I, O> {
  @override
  O map(
    _i7.Locale? locale,
    I? input,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #map,
          [
            locale,
            input,
          ],
        ),
        returnValue: _i8.dummyValue<O>(
          this,
          Invocation.method(
            #map,
            [
              locale,
              input,
            ],
          ),
        ),
        returnValueForMissingStub: _i8.dummyValue<O>(
          this,
          Invocation.method(
            #map,
            [
              locale,
              input,
            ],
          ),
        ),
      ) as O);
  @override
  List<O> mapList(
    _i7.Locale? locale,
    List<I>? input,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #mapList,
          [
            locale,
            input,
          ],
        ),
        returnValue: <O>[],
        returnValueForMissingStub: <O>[],
      ) as List<O>);
}

/// A class which mocks [PidRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPidRepository extends _i1.Mock implements _i9.PidRepository {
  @override
  _i10.Future<String> getPidIssuanceUrl() => (super.noSuchMethod(
        Invocation.method(
          #getPidIssuanceUrl,
          [],
        ),
        returnValue: _i10.Future<String>.value(''),
        returnValueForMissingStub: _i10.Future<String>.value(''),
      ) as _i10.Future<String>);
  @override
  _i10.Stream<List<_i11.DataAttribute>> continuePidIssuance(Uri? uri) => (super.noSuchMethod(
        Invocation.method(
          #continuePidIssuance,
          [uri],
        ),
        returnValue: _i10.Stream<List<_i11.DataAttribute>>.empty(),
        returnValueForMissingStub: _i10.Stream<List<_i11.DataAttribute>>.empty(),
      ) as _i10.Stream<List<_i11.DataAttribute>>);
  @override
  _i10.Future<void> cancelPidIssuance() => (super.noSuchMethod(
        Invocation.method(
          #cancelPidIssuance,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<_i2.WalletInstructionResult> acceptOfferedPid(String? pin) => (super.noSuchMethod(
        Invocation.method(
          #acceptOfferedPid,
          [pin],
        ),
        returnValue: _i10.Future<_i2.WalletInstructionResult>.value(_FakeWalletInstructionResult_0(
          this,
          Invocation.method(
            #acceptOfferedPid,
            [pin],
          ),
        )),
        returnValueForMissingStub: _i10.Future<_i2.WalletInstructionResult>.value(_FakeWalletInstructionResult_0(
          this,
          Invocation.method(
            #acceptOfferedPid,
            [pin],
          ),
        )),
      ) as _i10.Future<_i2.WalletInstructionResult>);
  @override
  _i10.Future<void> rejectOfferedPid() => (super.noSuchMethod(
        Invocation.method(
          #rejectOfferedPid,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
}

/// A class which mocks [WalletRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockWalletRepository extends _i1.Mock implements _i12.WalletRepository {
  @override
  _i10.Stream<bool> get isLockedStream => (super.noSuchMethod(
        Invocation.getter(#isLockedStream),
        returnValue: _i10.Stream<bool>.empty(),
        returnValueForMissingStub: _i10.Stream<bool>.empty(),
      ) as _i10.Stream<bool>);
  @override
  _i10.Future<void> validatePin(String? pin) => (super.noSuchMethod(
        Invocation.method(
          #validatePin,
          [pin],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> createWallet(String? pin) => (super.noSuchMethod(
        Invocation.method(
          #createWallet,
          [pin],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<bool> isRegistered() => (super.noSuchMethod(
        Invocation.method(
          #isRegistered,
          [],
        ),
        returnValue: _i10.Future<bool>.value(false),
        returnValueForMissingStub: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);
  @override
  _i10.Future<_i2.WalletInstructionResult> unlockWallet(String? pin) => (super.noSuchMethod(
        Invocation.method(
          #unlockWallet,
          [pin],
        ),
        returnValue: _i10.Future<_i2.WalletInstructionResult>.value(_FakeWalletInstructionResult_0(
          this,
          Invocation.method(
            #unlockWallet,
            [pin],
          ),
        )),
        returnValueForMissingStub: _i10.Future<_i2.WalletInstructionResult>.value(_FakeWalletInstructionResult_0(
          this,
          Invocation.method(
            #unlockWallet,
            [pin],
          ),
        )),
      ) as _i10.Future<_i2.WalletInstructionResult>);
  @override
  void lockWallet() => super.noSuchMethod(
        Invocation.method(
          #lockWallet,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i10.Future<_i13.CheckPinResult> confirmTransaction(String? pin) => (super.noSuchMethod(
        Invocation.method(
          #confirmTransaction,
          [pin],
        ),
        returnValue: _i10.Future<_i13.CheckPinResult>.value(_i8.dummyValue<_i13.CheckPinResult>(
          this,
          Invocation.method(
            #confirmTransaction,
            [pin],
          ),
        )),
        returnValueForMissingStub: _i10.Future<_i13.CheckPinResult>.value(_i8.dummyValue<_i13.CheckPinResult>(
          this,
          Invocation.method(
            #confirmTransaction,
            [pin],
          ),
        )),
      ) as _i10.Future<_i13.CheckPinResult>);
  @override
  _i10.Future<bool> containsPid() => (super.noSuchMethod(
        Invocation.method(
          #containsPid,
          [],
        ),
        returnValue: _i10.Future<bool>.value(false),
        returnValueForMissingStub: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);
  @override
  _i10.Future<void> resetWallet() => (super.noSuchMethod(
        Invocation.method(
          #resetWallet,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
}

/// A class which mocks [WalletCardRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockWalletCardRepository extends _i1.Mock implements _i14.WalletCardRepository {
  @override
  _i10.Stream<List<_i3.WalletCard>> observeWalletCards() => (super.noSuchMethod(
        Invocation.method(
          #observeWalletCards,
          [],
        ),
        returnValue: _i10.Stream<List<_i3.WalletCard>>.empty(),
        returnValueForMissingStub: _i10.Stream<List<_i3.WalletCard>>.empty(),
      ) as _i10.Stream<List<_i3.WalletCard>>);
  @override
  _i10.Future<bool> exists(String? cardId) => (super.noSuchMethod(
        Invocation.method(
          #exists,
          [cardId],
        ),
        returnValue: _i10.Future<bool>.value(false),
        returnValueForMissingStub: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);
  @override
  _i10.Future<void> create(_i3.WalletCard? card) => (super.noSuchMethod(
        Invocation.method(
          #create,
          [card],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<List<_i3.WalletCard>> readAll() => (super.noSuchMethod(
        Invocation.method(
          #readAll,
          [],
        ),
        returnValue: _i10.Future<List<_i3.WalletCard>>.value(<_i3.WalletCard>[]),
        returnValueForMissingStub: _i10.Future<List<_i3.WalletCard>>.value(<_i3.WalletCard>[]),
      ) as _i10.Future<List<_i3.WalletCard>>);
  @override
  _i10.Future<_i3.WalletCard> read(String? cardId) => (super.noSuchMethod(
        Invocation.method(
          #read,
          [cardId],
        ),
        returnValue: _i10.Future<_i3.WalletCard>.value(_FakeWalletCard_1(
          this,
          Invocation.method(
            #read,
            [cardId],
          ),
        )),
        returnValueForMissingStub: _i10.Future<_i3.WalletCard>.value(_FakeWalletCard_1(
          this,
          Invocation.method(
            #read,
            [cardId],
          ),
        )),
      ) as _i10.Future<_i3.WalletCard>);
  @override
  _i10.Future<void> update(_i3.WalletCard? card) => (super.noSuchMethod(
        Invocation.method(
          #update,
          [card],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> delete(String? cardId) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [cardId],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
}

/// A class which mocks [OrganizationRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockOrganizationRepository extends _i1.Mock implements _i15.OrganizationRepository {
  @override
  _i10.Future<_i16.Organization?> read(String? organizationId) => (super.noSuchMethod(
        Invocation.method(
          #read,
          [organizationId],
        ),
        returnValue: _i10.Future<_i16.Organization?>.value(),
        returnValueForMissingStub: _i10.Future<_i16.Organization?>.value(),
      ) as _i10.Future<_i16.Organization?>);
}

/// A class which mocks [TimelineAttributeRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTimelineAttributeRepository extends _i1.Mock implements _i17.TimelineAttributeRepository {
  @override
  _i10.Future<void> create(_i4.TimelineAttribute? attribute) => (super.noSuchMethod(
        Invocation.method(
          #create,
          [attribute],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<List<_i4.TimelineAttribute>> readAll() => (super.noSuchMethod(
        Invocation.method(
          #readAll,
          [],
        ),
        returnValue: _i10.Future<List<_i4.TimelineAttribute>>.value(<_i4.TimelineAttribute>[]),
        returnValueForMissingStub: _i10.Future<List<_i4.TimelineAttribute>>.value(<_i4.TimelineAttribute>[]),
      ) as _i10.Future<List<_i4.TimelineAttribute>>);
  @override
  _i10.Future<List<_i4.TimelineAttribute>> readFiltered({required String? cardId}) => (super.noSuchMethod(
        Invocation.method(
          #readFiltered,
          [],
          {#cardId: cardId},
        ),
        returnValue: _i10.Future<List<_i4.TimelineAttribute>>.value(<_i4.TimelineAttribute>[]),
        returnValueForMissingStub: _i10.Future<List<_i4.TimelineAttribute>>.value(<_i4.TimelineAttribute>[]),
      ) as _i10.Future<List<_i4.TimelineAttribute>>);
  @override
  _i10.Future<_i4.TimelineAttribute> read({
    required String? timelineAttributeId,
    String? cardId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [],
          {
            #timelineAttributeId: timelineAttributeId,
            #cardId: cardId,
          },
        ),
        returnValue: _i10.Future<_i4.TimelineAttribute>.value(_FakeTimelineAttribute_2(
          this,
          Invocation.method(
            #read,
            [],
            {
              #timelineAttributeId: timelineAttributeId,
              #cardId: cardId,
            },
          ),
        )),
        returnValueForMissingStub: _i10.Future<_i4.TimelineAttribute>.value(_FakeTimelineAttribute_2(
          this,
          Invocation.method(
            #read,
            [],
            {
              #timelineAttributeId: timelineAttributeId,
              #cardId: cardId,
            },
          ),
        )),
      ) as _i10.Future<_i4.TimelineAttribute>);
  @override
  _i10.Future<_i18.InteractionTimelineAttribute?> readMostRecentInteraction(
    String? cardId,
    _i18.InteractionStatus? status,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #readMostRecentInteraction,
          [
            cardId,
            status,
          ],
        ),
        returnValue: _i10.Future<_i18.InteractionTimelineAttribute?>.value(),
        returnValueForMissingStub: _i10.Future<_i18.InteractionTimelineAttribute?>.value(),
      ) as _i10.Future<_i18.InteractionTimelineAttribute?>);
  @override
  _i10.Future<_i19.OperationTimelineAttribute?> readMostRecentOperation(
    String? cardId,
    _i19.OperationStatus? status,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #readMostRecentOperation,
          [
            cardId,
            status,
          ],
        ),
        returnValue: _i10.Future<_i19.OperationTimelineAttribute?>.value(),
        returnValueForMissingStub: _i10.Future<_i19.OperationTimelineAttribute?>.value(),
      ) as _i10.Future<_i19.OperationTimelineAttribute?>);
}

/// A class which mocks [TypedWalletCore].
///
/// See the documentation for Mockito's code generation for more information.
class MockTypedWalletCore extends _i1.Mock implements _i20.TypedWalletCore {
  @override
  _i10.Stream<bool> get isLocked => (super.noSuchMethod(
        Invocation.getter(#isLocked),
        returnValue: _i10.Stream<bool>.empty(),
        returnValueForMissingStub: _i10.Stream<bool>.empty(),
      ) as _i10.Stream<bool>);
  @override
  _i10.Future<_i2.PinValidationResult> isValidPin(String? pin) => (super.noSuchMethod(
        Invocation.method(
          #isValidPin,
          [pin],
        ),
        returnValue: _i10.Future<_i2.PinValidationResult>.value(_i2.PinValidationResult.Ok),
        returnValueForMissingStub: _i10.Future<_i2.PinValidationResult>.value(_i2.PinValidationResult.Ok),
      ) as _i10.Future<_i2.PinValidationResult>);
  @override
  _i10.Future<void> register(String? pin) => (super.noSuchMethod(
        Invocation.method(
          #register,
          [pin],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<bool> isRegistered() => (super.noSuchMethod(
        Invocation.method(
          #isRegistered,
          [],
        ),
        returnValue: _i10.Future<bool>.value(false),
        returnValueForMissingStub: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);
  @override
  _i10.Future<void> lockWallet() => (super.noSuchMethod(
        Invocation.method(
          #lockWallet,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<_i2.WalletInstructionResult> unlockWallet(String? pin) => (super.noSuchMethod(
        Invocation.method(
          #unlockWallet,
          [pin],
        ),
        returnValue: _i10.Future<_i2.WalletInstructionResult>.value(_FakeWalletInstructionResult_0(
          this,
          Invocation.method(
            #unlockWallet,
            [pin],
          ),
        )),
        returnValueForMissingStub: _i10.Future<_i2.WalletInstructionResult>.value(_FakeWalletInstructionResult_0(
          this,
          Invocation.method(
            #unlockWallet,
            [pin],
          ),
        )),
      ) as _i10.Future<_i2.WalletInstructionResult>);
  @override
  _i10.Future<String> createPidIssuanceRedirectUri() => (super.noSuchMethod(
        Invocation.method(
          #createPidIssuanceRedirectUri,
          [],
        ),
        returnValue: _i10.Future<String>.value(''),
        returnValueForMissingStub: _i10.Future<String>.value(''),
      ) as _i10.Future<String>);
  @override
  _i10.Future<_i2.IdentifyUriResult> identifyUri(String? uri) => (super.noSuchMethod(
        Invocation.method(
          #identifyUri,
          [uri],
        ),
        returnValue: _i10.Future<_i2.IdentifyUriResult>.value(_i2.IdentifyUriResult.PidIssuance),
        returnValueForMissingStub: _i10.Future<_i2.IdentifyUriResult>.value(_i2.IdentifyUriResult.PidIssuance),
      ) as _i10.Future<_i2.IdentifyUriResult>);
  @override
  _i10.Future<void> cancelPidIssuance() => (super.noSuchMethod(
        Invocation.method(
          #cancelPidIssuance,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Stream<_i2.FlutterConfiguration> observeConfig() => (super.noSuchMethod(
        Invocation.method(
          #observeConfig,
          [],
        ),
        returnValue: _i10.Stream<_i2.FlutterConfiguration>.empty(),
        returnValueForMissingStub: _i10.Stream<_i2.FlutterConfiguration>.empty(),
      ) as _i10.Stream<_i2.FlutterConfiguration>);
  @override
  _i10.Future<_i2.WalletInstructionResult> acceptOfferedPid(String? pin) => (super.noSuchMethod(
        Invocation.method(
          #acceptOfferedPid,
          [pin],
        ),
        returnValue: _i10.Future<_i2.WalletInstructionResult>.value(_FakeWalletInstructionResult_0(
          this,
          Invocation.method(
            #acceptOfferedPid,
            [pin],
          ),
        )),
        returnValueForMissingStub: _i10.Future<_i2.WalletInstructionResult>.value(_FakeWalletInstructionResult_0(
          this,
          Invocation.method(
            #acceptOfferedPid,
            [pin],
          ),
        )),
      ) as _i10.Future<_i2.WalletInstructionResult>);
  @override
  _i10.Future<void> rejectOfferedPid() => (super.noSuchMethod(
        Invocation.method(
          #rejectOfferedPid,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Stream<List<_i2.Card>> observeCards() => (super.noSuchMethod(
        Invocation.method(
          #observeCards,
          [],
        ),
        returnValue: _i10.Stream<List<_i2.Card>>.empty(),
        returnValueForMissingStub: _i10.Stream<List<_i2.Card>>.empty(),
      ) as _i10.Stream<List<_i2.Card>>);
  @override
  _i10.Future<void> resetWallet() => (super.noSuchMethod(
        Invocation.method(
          #resetWallet,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<List<_i2.Card>> continuePidIssuance(Uri? uri) => (super.noSuchMethod(
        Invocation.method(
          #continuePidIssuance,
          [uri],
        ),
        returnValue: _i10.Future<List<_i2.Card>>.value(<_i2.Card>[]),
        returnValueForMissingStub: _i10.Future<List<_i2.Card>>.value(<_i2.Card>[]),
      ) as _i10.Future<List<_i2.Card>>);
  @override
  _i10.Future<_i2.DisclosureResult> startDisclosure(Uri? uri) => (super.noSuchMethod(
        Invocation.method(
          #startDisclosure,
          [uri],
        ),
        returnValue: _i10.Future<_i2.DisclosureResult>.value(_FakeDisclosureResult_3(
          this,
          Invocation.method(
            #startDisclosure,
            [uri],
          ),
        )),
        returnValueForMissingStub: _i10.Future<_i2.DisclosureResult>.value(_FakeDisclosureResult_3(
          this,
          Invocation.method(
            #startDisclosure,
            [uri],
          ),
        )),
      ) as _i10.Future<_i2.DisclosureResult>);
  @override
  _i10.Future<void> cancelDisclosure() => (super.noSuchMethod(
        Invocation.method(
          #cancelDisclosure,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<_i2.WalletInstructionResult> acceptDisclosure(String? pin) => (super.noSuchMethod(
        Invocation.method(
          #acceptDisclosure,
          [pin],
        ),
        returnValue: _i10.Future<_i2.WalletInstructionResult>.value(_FakeWalletInstructionResult_0(
          this,
          Invocation.method(
            #acceptDisclosure,
            [pin],
          ),
        )),
        returnValueForMissingStub: _i10.Future<_i2.WalletInstructionResult>.value(_FakeWalletInstructionResult_0(
          this,
          Invocation.method(
            #acceptDisclosure,
            [pin],
          ),
        )),
      ) as _i10.Future<_i2.WalletInstructionResult>);
}

/// A class which mocks [NavigationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigationService extends _i1.Mock implements _i21.NavigationService {
  @override
  _i10.Future<void> handleNavigationRequest(
    _i22.NavigationRequest? request, {
    bool? queueIfNotReady = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleNavigationRequest,
          [request],
          {#queueIfNotReady: queueIfNotReady},
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<void> processQueue() => (super.noSuchMethod(
        Invocation.method(
          #processQueue,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
}

/// A class which mocks [DecodeUriUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockDecodeUriUseCase extends _i1.Mock implements _i23.DecodeUriUseCase {
  @override
  _i10.Future<_i22.NavigationRequest> invoke(Uri? uri) => (super.noSuchMethod(
        Invocation.method(
          #invoke,
          [uri],
        ),
        returnValue: _i10.Future<_i22.NavigationRequest>.value(_i8.dummyValue<_i22.NavigationRequest>(
          this,
          Invocation.method(
            #invoke,
            [uri],
          ),
        )),
        returnValueForMissingStub: _i10.Future<_i22.NavigationRequest>.value(_i8.dummyValue<_i22.NavigationRequest>(
          this,
          Invocation.method(
            #invoke,
            [uri],
          ),
        )),
      ) as _i10.Future<_i22.NavigationRequest>);
}

/// A class which mocks [IsWalletInitializedUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockIsWalletInitializedUseCase extends _i1.Mock implements _i24.IsWalletInitializedUseCase {
  @override
  _i10.Future<bool> invoke() => (super.noSuchMethod(
        Invocation.method(
          #invoke,
          [],
        ),
        returnValue: _i10.Future<bool>.value(false),
        returnValueForMissingStub: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);
}

/// A class which mocks [IsWalletInitializedWithPidUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockIsWalletInitializedWithPidUseCase extends _i1.Mock implements _i25.IsWalletInitializedWithPidUseCase {
  @override
  _i10.Future<bool> invoke() => (super.noSuchMethod(
        Invocation.method(
          #invoke,
          [],
        ),
        returnValue: _i10.Future<bool>.value(false),
        returnValueForMissingStub: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);
}

/// A class which mocks [ObserveWalletLockedUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockObserveWalletLockedUseCase extends _i1.Mock implements _i26.ObserveWalletLockedUseCase {
  @override
  _i10.Stream<bool> invoke() => (super.noSuchMethod(
        Invocation.method(
          #invoke,
          [],
        ),
        returnValue: _i10.Stream<bool>.empty(),
        returnValueForMissingStub: _i10.Stream<bool>.empty(),
      ) as _i10.Stream<bool>);
}

/// A class which mocks [CheckPinUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockCheckPinUseCase extends _i1.Mock implements _i13.CheckPinUseCase {
  @override
  _i10.Future<_i13.CheckPinResult> invoke(String? pin) => (super.noSuchMethod(
        Invocation.method(
          #invoke,
          [pin],
        ),
        returnValue: _i10.Future<_i13.CheckPinResult>.value(_i8.dummyValue<_i13.CheckPinResult>(
          this,
          Invocation.method(
            #invoke,
            [pin],
          ),
        )),
        returnValueForMissingStub: _i10.Future<_i13.CheckPinResult>.value(_i8.dummyValue<_i13.CheckPinResult>(
          this,
          Invocation.method(
            #invoke,
            [pin],
          ),
        )),
      ) as _i10.Future<_i13.CheckPinResult>);
}

/// A class which mocks [SetupMockedWalletUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockSetupMockedWalletUseCase extends _i1.Mock implements _i27.SetupMockedWalletUseCase {
  @override
  _i10.Future<void> invoke() => (super.noSuchMethod(
        Invocation.method(
          #invoke,
          [],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
}

/// A class which mocks [CheckHasInternetUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockCheckHasInternetUseCase extends _i1.Mock implements _i28.CheckHasInternetUseCase {
  @override
  _i10.Future<bool> invoke() => (super.noSuchMethod(
        Invocation.method(
          #invoke,
          [],
        ),
        returnValue: _i10.Future<bool>.value(false),
        returnValueForMissingStub: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);
}

/// A class which mocks [AcceptOfferedPidUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockAcceptOfferedPidUseCase extends _i1.Mock implements _i29.AcceptOfferedPidUseCase {
  @override
  _i10.Future<_i13.CheckPinResult> invoke(String? pin) => (super.noSuchMethod(
        Invocation.method(
          #invoke,
          [pin],
        ),
        returnValue: _i10.Future<_i13.CheckPinResult>.value(_i8.dummyValue<_i13.CheckPinResult>(
          this,
          Invocation.method(
            #invoke,
            [pin],
          ),
        )),
        returnValueForMissingStub: _i10.Future<_i13.CheckPinResult>.value(_i8.dummyValue<_i13.CheckPinResult>(
          this,
          Invocation.method(
            #invoke,
            [pin],
          ),
        )),
      ) as _i10.Future<_i13.CheckPinResult>);
}

/// A class which mocks [PerformPreNavigationActionsUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockPerformPreNavigationActionsUseCase extends _i1.Mock implements _i22.PerformPreNavigationActionsUseCase {
  @override
  _i10.Future<void> invoke(List<_i22.PreNavigationAction>? actions) => (super.noSuchMethod(
        Invocation.method(
          #invoke,
          [actions],
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
}

/// A class which mocks [CheckNavigationPrerequisitesUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockCheckNavigationPrerequisitesUseCase extends _i1.Mock implements _i30.CheckNavigationPrerequisitesUseCase {
  @override
  _i10.Future<bool> invoke(List<_i22.NavigationPrerequisite>? prerequisites) => (super.noSuchMethod(
        Invocation.method(
          #invoke,
          [prerequisites],
        ),
        returnValue: _i10.Future<bool>.value(false),
        returnValueForMissingStub: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);
}

/// A class which mocks [WalletCore].
///
/// See the documentation for Mockito's code generation for more information.
class MockWalletCore extends _i1.Mock implements _i2.WalletCore {
  @override
  _i5.FlutterRustBridgeTaskConstMeta get kInitConstMeta => (super.noSuchMethod(
        Invocation.getter(#kInitConstMeta),
        returnValue: _FakeFlutterRustBridgeTaskConstMeta_4(
          this,
          Invocation.getter(#kInitConstMeta),
        ),
        returnValueForMissingStub: _FakeFlutterRustBridgeTaskConstMeta_4(
          this,
          Invocation.getter(#kInitConstMeta),
        ),
      ) as _i5.FlutterRustBridgeTaskConstMeta);
  @override
  _i5.FlutterRustBridgeTaskConstMeta get kIsInitializedConstMeta => (super.noSuchMethod(
        Invocation.getter(#kIsInitializedConstMeta),
        returnValue: _FakeFlutterRustBridgeTaskConstMeta_4(
          this,
          Invocation.getter(#kIsInitializedConstMeta),
        ),
        returnValueForMissingStub: _FakeFlutterRustBridgeTaskConstMeta_4(
          this,
          Invocation.getter(#kIsInitializedConstMeta),
        ),
      ) as _i5.FlutterRustBridgeTaskConstMeta);
  @override
  _i5.FlutterRustBridgeTaskConstMeta get kIsValidPinConstMeta => (super.noSuchMethod(
        Invocation.getter(#kIsValidPinConstMeta),
        returnValue: _FakeFlutterRustBridgeTaskConstMeta_4(
          this,
          Invocation.getter(#kIsValidPinConstMeta),
        ),
        returnValueForMissingStub: _FakeFlutterRustBridgeTaskConstMeta_4(
          this,
          Invocation.getter(#kIsValidPinConstMeta),
        ),
      ) as _i5.FlutterRustBridgeTaskConstMeta);
  @override
  _i5.FlutterRustBridgeTaskConstMeta get kSetLockStreamConstMeta => (super.noSuchMethod(
        Invocation.getter(#kSetLockStreamConstMeta),
        returnValue: _FakeFlutterRustBridgeTaskConstMeta_4(
          this,
          Invocation.getter(#kSetLockStreamConstMeta),
        ),
        returnValueForMissingStub: _FakeFlutterRustBridgeTaskConstMeta_4(
          this,
          Invocation.getter(#kSetLockStreamConstMeta),
        ),
      ) as _i5.FlutterRustBridgeTaskConstMeta);
  @override
  _i5.FlutterRustBridgeTaskConstMeta get kClearLockStreamConstMeta => (super.noSuchMethod(
        Invocation.getter(#kClearLockStreamConstMeta),
        returnValue: _FakeFlutterRustBridgeTaskConstMeta_4(
          this,
          Invocation.getter(#kClearLockStreamConstMeta),
        ),
        returnValueForMissingStub: _FakeFlutterRustBridgeTaskConstMeta_4(
          this,
          Invocation.getter(#kClearLockStreamConstMeta),
        ),
      ) as _i5.FlutterRustBridgeTaskConstMeta);
  @override
  _i5.FlutterRustBridgeTaskConstMeta get kSetConfigurationStreamConstMeta => (super.noSuchMethod(
        Invocation.getter(#kSetConfigurationStreamConstMeta),
        returnValue: _FakeFlutterRustBridgeTaskConstMeta_4(
          this,
          Invocation.getter(#kSetConfigurationStreamConstMeta),
        ),
        returnValueForMissingStub: _FakeFlutterRustBridgeTaskConstMeta_4(
          this,
          Invocation.getter(#kSetConfigurationStreamConstMeta),
        ),
      ) as _i5.FlutterRustBridgeTaskConstMeta);
  @override
  _i5.FlutterRustBridgeTaskConstMeta get kClearConfigurationStreamConstMeta => (super.noSuchMethod(
        Invocation.getter(#kClearConfigurationStreamConstMeta),
        returnValue: _FakeFlutterRustBridgeTaskConstMeta_4(
          this,
          Invocation.getter(#kClearConfigurationStreamConstMeta),
        ),
        returnValueForMissingStub: _FakeFlutterRustBridgeTaskConstMeta_4(
          this,
          Invocation.getter(#kClearConfigurationStreamConstMeta),
        ),
      ) as _i5.FlutterRustBridgeTaskConstMeta);
  @override
  _i5.FlutterRustBridgeTaskConstMeta get kSetCardsStreamConstMeta => (super.noSuchMethod(
        Invocation.getter(#kSetCardsStreamConstMeta),
        returnValue: _FakeFlutterRustBridgeTaskConstMeta_4(
          this,
          Invocation.getter(#kSetCardsStreamConstMeta),
        ),
        returnValueForMissingStub: _FakeFlutterRustBridgeTaskConstMeta_4(
          this,
          Invocation.getter(#kSetCardsStreamConstMeta),
        ),
      ) as _i5.FlutterRustBridgeTaskConstMeta);
  @override
  _i5.FlutterRustBridgeTaskConstMeta get kClearCardsStreamConstMeta => (super.noSuchMethod(
        Invocation.getter(#kClearCardsStreamConstMeta),
        returnValue: _FakeFlutterRustBridgeTaskConstMeta_4(
          this,
          Invocation.getter(#kClearCardsStreamConstMeta),
        ),
        returnValueForMissingStub: _FakeFlutterRustBridgeTaskConstMeta_4(
          this,
          Invocation.getter(#kClearCardsStreamConstMeta),
        ),
      ) as _i5.FlutterRustBridgeTaskConstMeta);
  @override
  _i5.FlutterRustBridgeTaskConstMeta get kUnlockWalletConstMeta => (super.noSuchMethod(
        Invocation.getter(#kUnlockWalletConstMeta),
        returnValue: _FakeFlutterRustBridgeTaskConstMeta_4(
          this,
          Invocation.getter(#kUnlockWalletConstMeta),
        ),
        returnValueForMissingStub: _FakeFlutterRustBridgeTaskConstMeta_4(
          this,
          Invocation.getter(#kUnlockWalletConstMeta),
        ),
      ) as _i5.FlutterRustBridgeTaskConstMeta);
  @override
  _i5.FlutterRustBridgeTaskConstMeta get kLockWalletConstMeta => (super.noSuchMethod(
        Invocation.getter(#kLockWalletConstMeta),
        returnValue: _FakeFlutterRustBridgeTaskConstMeta_4(
          this,
          Invocation.getter(#kLockWalletConstMeta),
        ),
        returnValueForMissingStub: _FakeFlutterRustBridgeTaskConstMeta_4(
          this,
          Invocation.getter(#kLockWalletConstMeta),
        ),
      ) as _i5.FlutterRustBridgeTaskConstMeta);
  @override
  _i5.FlutterRustBridgeTaskConstMeta get kHasRegistrationConstMeta => (super.noSuchMethod(
        Invocation.getter(#kHasRegistrationConstMeta),
        returnValue: _FakeFlutterRustBridgeTaskConstMeta_4(
          this,
          Invocation.getter(#kHasRegistrationConstMeta),
        ),
        returnValueForMissingStub: _FakeFlutterRustBridgeTaskConstMeta_4(
          this,
          Invocation.getter(#kHasRegistrationConstMeta),
        ),
      ) as _i5.FlutterRustBridgeTaskConstMeta);
  @override
  _i5.FlutterRustBridgeTaskConstMeta get kRegisterConstMeta => (super.noSuchMethod(
        Invocation.getter(#kRegisterConstMeta),
        returnValue: _FakeFlutterRustBridgeTaskConstMeta_4(
          this,
          Invocation.getter(#kRegisterConstMeta),
        ),
        returnValueForMissingStub: _FakeFlutterRustBridgeTaskConstMeta_4(
          this,
          Invocation.getter(#kRegisterConstMeta),
        ),
      ) as _i5.FlutterRustBridgeTaskConstMeta);
  @override
  _i5.FlutterRustBridgeTaskConstMeta get kIdentifyUriConstMeta => (super.noSuchMethod(
        Invocation.getter(#kIdentifyUriConstMeta),
        returnValue: _FakeFlutterRustBridgeTaskConstMeta_4(
          this,
          Invocation.getter(#kIdentifyUriConstMeta),
        ),
        returnValueForMissingStub: _FakeFlutterRustBridgeTaskConstMeta_4(
          this,
          Invocation.getter(#kIdentifyUriConstMeta),
        ),
      ) as _i5.FlutterRustBridgeTaskConstMeta);
  @override
  _i5.FlutterRustBridgeTaskConstMeta get kCreatePidIssuanceRedirectUriConstMeta => (super.noSuchMethod(
        Invocation.getter(#kCreatePidIssuanceRedirectUriConstMeta),
        returnValue: _FakeFlutterRustBridgeTaskConstMeta_4(
          this,
          Invocation.getter(#kCreatePidIssuanceRedirectUriConstMeta),
        ),
        returnValueForMissingStub: _FakeFlutterRustBridgeTaskConstMeta_4(
          this,
          Invocation.getter(#kCreatePidIssuanceRedirectUriConstMeta),
        ),
      ) as _i5.FlutterRustBridgeTaskConstMeta);
  @override
  _i5.FlutterRustBridgeTaskConstMeta get kCancelPidIssuanceConstMeta => (super.noSuchMethod(
        Invocation.getter(#kCancelPidIssuanceConstMeta),
        returnValue: _FakeFlutterRustBridgeTaskConstMeta_4(
          this,
          Invocation.getter(#kCancelPidIssuanceConstMeta),
        ),
        returnValueForMissingStub: _FakeFlutterRustBridgeTaskConstMeta_4(
          this,
          Invocation.getter(#kCancelPidIssuanceConstMeta),
        ),
      ) as _i5.FlutterRustBridgeTaskConstMeta);
  @override
  _i5.FlutterRustBridgeTaskConstMeta get kContinuePidIssuanceConstMeta => (super.noSuchMethod(
        Invocation.getter(#kContinuePidIssuanceConstMeta),
        returnValue: _FakeFlutterRustBridgeTaskConstMeta_4(
          this,
          Invocation.getter(#kContinuePidIssuanceConstMeta),
        ),
        returnValueForMissingStub: _FakeFlutterRustBridgeTaskConstMeta_4(
          this,
          Invocation.getter(#kContinuePidIssuanceConstMeta),
        ),
      ) as _i5.FlutterRustBridgeTaskConstMeta);
  @override
  _i5.FlutterRustBridgeTaskConstMeta get kAcceptPidIssuanceConstMeta => (super.noSuchMethod(
        Invocation.getter(#kAcceptPidIssuanceConstMeta),
        returnValue: _FakeFlutterRustBridgeTaskConstMeta_4(
          this,
          Invocation.getter(#kAcceptPidIssuanceConstMeta),
        ),
        returnValueForMissingStub: _FakeFlutterRustBridgeTaskConstMeta_4(
          this,
          Invocation.getter(#kAcceptPidIssuanceConstMeta),
        ),
      ) as _i5.FlutterRustBridgeTaskConstMeta);
  @override
  _i5.FlutterRustBridgeTaskConstMeta get kRejectPidIssuanceConstMeta => (super.noSuchMethod(
        Invocation.getter(#kRejectPidIssuanceConstMeta),
        returnValue: _FakeFlutterRustBridgeTaskConstMeta_4(
          this,
          Invocation.getter(#kRejectPidIssuanceConstMeta),
        ),
        returnValueForMissingStub: _FakeFlutterRustBridgeTaskConstMeta_4(
          this,
          Invocation.getter(#kRejectPidIssuanceConstMeta),
        ),
      ) as _i5.FlutterRustBridgeTaskConstMeta);
  @override
  _i5.FlutterRustBridgeTaskConstMeta get kStartDisclosureConstMeta => (super.noSuchMethod(
        Invocation.getter(#kStartDisclosureConstMeta),
        returnValue: _FakeFlutterRustBridgeTaskConstMeta_4(
          this,
          Invocation.getter(#kStartDisclosureConstMeta),
        ),
        returnValueForMissingStub: _FakeFlutterRustBridgeTaskConstMeta_4(
          this,
          Invocation.getter(#kStartDisclosureConstMeta),
        ),
      ) as _i5.FlutterRustBridgeTaskConstMeta);
  @override
  _i5.FlutterRustBridgeTaskConstMeta get kCancelDisclosureConstMeta => (super.noSuchMethod(
        Invocation.getter(#kCancelDisclosureConstMeta),
        returnValue: _FakeFlutterRustBridgeTaskConstMeta_4(
          this,
          Invocation.getter(#kCancelDisclosureConstMeta),
        ),
        returnValueForMissingStub: _FakeFlutterRustBridgeTaskConstMeta_4(
          this,
          Invocation.getter(#kCancelDisclosureConstMeta),
        ),
      ) as _i5.FlutterRustBridgeTaskConstMeta);
  @override
  _i5.FlutterRustBridgeTaskConstMeta get kAcceptDisclosureConstMeta => (super.noSuchMethod(
        Invocation.getter(#kAcceptDisclosureConstMeta),
        returnValue: _FakeFlutterRustBridgeTaskConstMeta_4(
          this,
          Invocation.getter(#kAcceptDisclosureConstMeta),
        ),
        returnValueForMissingStub: _FakeFlutterRustBridgeTaskConstMeta_4(
          this,
          Invocation.getter(#kAcceptDisclosureConstMeta),
        ),
      ) as _i5.FlutterRustBridgeTaskConstMeta);
  @override
  _i5.FlutterRustBridgeTaskConstMeta get kResetWalletConstMeta => (super.noSuchMethod(
        Invocation.getter(#kResetWalletConstMeta),
        returnValue: _FakeFlutterRustBridgeTaskConstMeta_4(
          this,
          Invocation.getter(#kResetWalletConstMeta),
        ),
        returnValueForMissingStub: _FakeFlutterRustBridgeTaskConstMeta_4(
          this,
          Invocation.getter(#kResetWalletConstMeta),
        ),
      ) as _i5.FlutterRustBridgeTaskConstMeta);
  @override
  _i10.Future<void> init({dynamic hint}) => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
          {#hint: hint},
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<bool> isInitialized({dynamic hint}) => (super.noSuchMethod(
        Invocation.method(
          #isInitialized,
          [],
          {#hint: hint},
        ),
        returnValue: _i10.Future<bool>.value(false),
        returnValueForMissingStub: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);
  @override
  _i10.Future<_i2.PinValidationResult> isValidPin({
    required String? pin,
    dynamic hint,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #isValidPin,
          [],
          {
            #pin: pin,
            #hint: hint,
          },
        ),
        returnValue: _i10.Future<_i2.PinValidationResult>.value(_i2.PinValidationResult.Ok),
        returnValueForMissingStub: _i10.Future<_i2.PinValidationResult>.value(_i2.PinValidationResult.Ok),
      ) as _i10.Future<_i2.PinValidationResult>);
  @override
  _i10.Stream<bool> setLockStream({dynamic hint}) => (super.noSuchMethod(
        Invocation.method(
          #setLockStream,
          [],
          {#hint: hint},
        ),
        returnValue: _i10.Stream<bool>.empty(),
        returnValueForMissingStub: _i10.Stream<bool>.empty(),
      ) as _i10.Stream<bool>);
  @override
  _i10.Future<void> clearLockStream({dynamic hint}) => (super.noSuchMethod(
        Invocation.method(
          #clearLockStream,
          [],
          {#hint: hint},
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Stream<_i2.FlutterConfiguration> setConfigurationStream({dynamic hint}) => (super.noSuchMethod(
        Invocation.method(
          #setConfigurationStream,
          [],
          {#hint: hint},
        ),
        returnValue: _i10.Stream<_i2.FlutterConfiguration>.empty(),
        returnValueForMissingStub: _i10.Stream<_i2.FlutterConfiguration>.empty(),
      ) as _i10.Stream<_i2.FlutterConfiguration>);
  @override
  _i10.Future<void> clearConfigurationStream({dynamic hint}) => (super.noSuchMethod(
        Invocation.method(
          #clearConfigurationStream,
          [],
          {#hint: hint},
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Stream<List<_i2.Card>> setCardsStream({dynamic hint}) => (super.noSuchMethod(
        Invocation.method(
          #setCardsStream,
          [],
          {#hint: hint},
        ),
        returnValue: _i10.Stream<List<_i2.Card>>.empty(),
        returnValueForMissingStub: _i10.Stream<List<_i2.Card>>.empty(),
      ) as _i10.Stream<List<_i2.Card>>);
  @override
  _i10.Future<void> clearCardsStream({dynamic hint}) => (super.noSuchMethod(
        Invocation.method(
          #clearCardsStream,
          [],
          {#hint: hint},
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<_i2.WalletInstructionResult> unlockWallet({
    required String? pin,
    dynamic hint,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #unlockWallet,
          [],
          {
            #pin: pin,
            #hint: hint,
          },
        ),
        returnValue: _i10.Future<_i2.WalletInstructionResult>.value(_FakeWalletInstructionResult_0(
          this,
          Invocation.method(
            #unlockWallet,
            [],
            {
              #pin: pin,
              #hint: hint,
            },
          ),
        )),
        returnValueForMissingStub: _i10.Future<_i2.WalletInstructionResult>.value(_FakeWalletInstructionResult_0(
          this,
          Invocation.method(
            #unlockWallet,
            [],
            {
              #pin: pin,
              #hint: hint,
            },
          ),
        )),
      ) as _i10.Future<_i2.WalletInstructionResult>);
  @override
  _i10.Future<void> lockWallet({dynamic hint}) => (super.noSuchMethod(
        Invocation.method(
          #lockWallet,
          [],
          {#hint: hint},
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<bool> hasRegistration({dynamic hint}) => (super.noSuchMethod(
        Invocation.method(
          #hasRegistration,
          [],
          {#hint: hint},
        ),
        returnValue: _i10.Future<bool>.value(false),
        returnValueForMissingStub: _i10.Future<bool>.value(false),
      ) as _i10.Future<bool>);
  @override
  _i10.Future<void> register({
    required String? pin,
    dynamic hint,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #register,
          [],
          {
            #pin: pin,
            #hint: hint,
          },
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<_i2.IdentifyUriResult> identifyUri({
    required String? uri,
    dynamic hint,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #identifyUri,
          [],
          {
            #uri: uri,
            #hint: hint,
          },
        ),
        returnValue: _i10.Future<_i2.IdentifyUriResult>.value(_i2.IdentifyUriResult.PidIssuance),
        returnValueForMissingStub: _i10.Future<_i2.IdentifyUriResult>.value(_i2.IdentifyUriResult.PidIssuance),
      ) as _i10.Future<_i2.IdentifyUriResult>);
  @override
  _i10.Future<String> createPidIssuanceRedirectUri({dynamic hint}) => (super.noSuchMethod(
        Invocation.method(
          #createPidIssuanceRedirectUri,
          [],
          {#hint: hint},
        ),
        returnValue: _i10.Future<String>.value(''),
        returnValueForMissingStub: _i10.Future<String>.value(''),
      ) as _i10.Future<String>);
  @override
  _i10.Future<void> cancelPidIssuance({dynamic hint}) => (super.noSuchMethod(
        Invocation.method(
          #cancelPidIssuance,
          [],
          {#hint: hint},
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<List<_i2.Card>> continuePidIssuance({
    required String? uri,
    dynamic hint,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #continuePidIssuance,
          [],
          {
            #uri: uri,
            #hint: hint,
          },
        ),
        returnValue: _i10.Future<List<_i2.Card>>.value(<_i2.Card>[]),
        returnValueForMissingStub: _i10.Future<List<_i2.Card>>.value(<_i2.Card>[]),
      ) as _i10.Future<List<_i2.Card>>);
  @override
  _i10.Future<_i2.WalletInstructionResult> acceptPidIssuance({
    required String? pin,
    dynamic hint,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #acceptPidIssuance,
          [],
          {
            #pin: pin,
            #hint: hint,
          },
        ),
        returnValue: _i10.Future<_i2.WalletInstructionResult>.value(_FakeWalletInstructionResult_0(
          this,
          Invocation.method(
            #acceptPidIssuance,
            [],
            {
              #pin: pin,
              #hint: hint,
            },
          ),
        )),
        returnValueForMissingStub: _i10.Future<_i2.WalletInstructionResult>.value(_FakeWalletInstructionResult_0(
          this,
          Invocation.method(
            #acceptPidIssuance,
            [],
            {
              #pin: pin,
              #hint: hint,
            },
          ),
        )),
      ) as _i10.Future<_i2.WalletInstructionResult>);
  @override
  _i10.Future<void> rejectPidIssuance({dynamic hint}) => (super.noSuchMethod(
        Invocation.method(
          #rejectPidIssuance,
          [],
          {#hint: hint},
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<_i2.DisclosureResult> startDisclosure({
    required String? uri,
    dynamic hint,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #startDisclosure,
          [],
          {
            #uri: uri,
            #hint: hint,
          },
        ),
        returnValue: _i10.Future<_i2.DisclosureResult>.value(_FakeDisclosureResult_3(
          this,
          Invocation.method(
            #startDisclosure,
            [],
            {
              #uri: uri,
              #hint: hint,
            },
          ),
        )),
        returnValueForMissingStub: _i10.Future<_i2.DisclosureResult>.value(_FakeDisclosureResult_3(
          this,
          Invocation.method(
            #startDisclosure,
            [],
            {
              #uri: uri,
              #hint: hint,
            },
          ),
        )),
      ) as _i10.Future<_i2.DisclosureResult>);
  @override
  _i10.Future<void> cancelDisclosure({dynamic hint}) => (super.noSuchMethod(
        Invocation.method(
          #cancelDisclosure,
          [],
          {#hint: hint},
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
  @override
  _i10.Future<_i2.WalletInstructionResult> acceptDisclosure({
    required String? pin,
    dynamic hint,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #acceptDisclosure,
          [],
          {
            #pin: pin,
            #hint: hint,
          },
        ),
        returnValue: _i10.Future<_i2.WalletInstructionResult>.value(_FakeWalletInstructionResult_0(
          this,
          Invocation.method(
            #acceptDisclosure,
            [],
            {
              #pin: pin,
              #hint: hint,
            },
          ),
        )),
        returnValueForMissingStub: _i10.Future<_i2.WalletInstructionResult>.value(_FakeWalletInstructionResult_0(
          this,
          Invocation.method(
            #acceptDisclosure,
            [],
            {
              #pin: pin,
              #hint: hint,
            },
          ),
        )),
      ) as _i10.Future<_i2.WalletInstructionResult>);
  @override
  _i10.Future<void> resetWallet({dynamic hint}) => (super.noSuchMethod(
        Invocation.method(
          #resetWallet,
          [],
          {#hint: hint},
        ),
        returnValue: _i10.Future<void>.value(),
        returnValueForMissingStub: _i10.Future<void>.value(),
      ) as _i10.Future<void>);
}
