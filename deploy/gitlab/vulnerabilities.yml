dependency-check:
  extends: .env-ont-k8s
  rules: !reference [.default-or-release-or-merge-request, rules]
  image:
    name: "$HARBOR_REGISTRY/$HARBOR_NLW_PROJECT/nl-wallet-app-builder-dependency-check@sha256:c4e55d089e9381589650fb0919507ed834caf58966fb4909caba79aea40a782e"
  before_script:
    - NVD_API_KEY="$(kubectl get secret nl-wallet-nist-nvd -o jsonpath='{.data.api-key}' | base64 --decode)"
    - (cd wallet_web; npm ci)
    - mkdir -p $CI_PROJECT_DIR/dependency_check_data
  script:
    - dependency-check.sh
      --data $CI_PROJECT_DIR/dependency_check_data
      --disableDart
      --disableAssembly
      --disableYarnAudit
      --enableExperimental
      --format "HTML" --format "JSON" --format "XML"
      --scan "."
      --suppression $CI_PROJECT_DIR/deploy/dependencies/dependency_check_suppressions.xml
      --nvdApiKey "$NVD_API_KEY"
      --failOnCVSS 0.1
  artifacts:
    when: always
    paths:
      - dependency-check-report.json
      - dependency-check-report.html
      - dependency-check-report.xml
  cache:
    key: dependency-check-${CI_JOB_NAME_SLUG}-${CI_DEFAULT_BRANCH}
    paths:
      - $CI_PROJECT_DIR/dependency_check_data
    policy: $CACHE_POLICY
  allow_failure: true

osv-scanner:
  rules: !reference [.default-or-release-or-merge-request, rules]
  image:
    name: "$HARBOR_REGISTRY/ghcr-io-proxy/google/osv-scanner:latest"
  script:
    - |
      /osv-scanner --config=$CI_PROJECT_DIR/deploy/dependencies/osv-scanner.toml --format sarif --recursive "$CI_PROJECT_DIR" > osv.sarif \
        || /osv-scanner --config=$CI_PROJECT_DIR/deploy/dependencies/osv-scanner.toml --format table --recursive "$CI_PROJECT_DIR"
  artifacts:
    when: always
    paths:
      - osv.sarif
  allow_failure: true

dependency-check-rust:
  rules: !reference [.default-or-release-or-merge-request, rules]
  image:
    name: "${HARBOR_REGISTRY}/${HARBOR_NLW_PROJECT}/nl-wallet-app-builder-rust@sha256:f636c5d9d8ac790a0b254fcf0e85bb7b21745194807da70704e507706e64807c"
  before_script:
    - mkdir -p $CI_PROJECT_DIR/.cargo
    - cp $CI_PROJECT_DIR/deploy/dependencies/cargo-audit.toml $CI_PROJECT_DIR/.cargo/audit.toml
  script:
    - |
      cargo audit \
        --file wallet_core/Cargo.lock \
        --json | tee audit.json | jq
  artifacts:
    when: always
    paths:
      - audit.json
  allow_failure: true

dependency-check-images:
  rules: !reference [.default-or-release, rules]
  needs:
    - job: build-wallet-provider-image
      artifacts: false
    - job: build-wp-migrations-image
      artifacts: false
    - job: build-ws-migrations-image
      artifacts: false
    - job: build-mock-relying-party-image
      artifacts: false
    - job: build-wallet-server-image
      artifacts: false
    - job: build-verification-server-image
      artifacts: false
    - job: build-pid-issuer-image
      artifacts: false
  image:
    name: "${HARBOR_REGISTRY}/${HARBOR_NLW_PROJECT}/nl-wallet-app-builder-sonar-flutter@sha256:a6f06dfaade25fdcf89d1349acf1e5e86fe1bdc68155eac05a8eafb9aa790e77"
  variables:
    GIT_STRATEGY: none
  before_script:
    - IMAGES=(
      "nl-wallet-app-builder-android-flutter-rust"
      "nl-wallet-app-builder-flutter"
      "nl-wallet-app-builder-flutter-rust"
      "nl-wallet-app-builder-ruby"
      "nl-wallet-app-builder-rust"
      "nl-wallet-mock-relying-party"
      "nl-wallet-provider-migrations"
      "nl-wallet-provider"
      "nl-wallet-server-migrations"
      "nl-wallet-server"
      "nl-verification-server"
      "nl-pid-issuer"
      "nl-wallet-gba-hc-converter"
      "nl-rdo-max"
      "nl-wallet-hsm-simulator"
      )
    - mkdir -p trivy
  script:
    - |
      BASIC_AUTH="${HARBOR_GN2_ROBOT_NAME}:$(base64 --decode <<< ${HARBOR_GN2_ROBOT_SECRET})"
      for IMAGE in "${IMAGES[@]}"; do
        ARTIFACTS_URL="https://${HARBOR_REGISTRY}/api/v2.0/projects/${HARBOR_NLW_PROJECT}/repositories/${IMAGE}/artifacts?page_size=1&page=1&sort=-push_time"
        VULNERABILITIES_HREF=$(curl --user "${BASIC_AUTH}" --url "${ARTIFACTS_URL}" | jq ".[] | .addition_links.vulnerabilities.href" | sed -e 's/^"//' -e 's/"$//')
        VULNERABILITIES_URL="https://${HARBOR_REGISTRY}${VULNERABILITIES_HREF}"
        curl --user "${BASIC_AUTH}" -o "trivy/${IMAGE}.json" $VULNERABILITIES_URL
      done
  artifacts:
    paths:
      - trivy
