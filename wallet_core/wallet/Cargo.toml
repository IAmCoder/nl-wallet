[package]
name = "wallet"
version.workspace = true
edition.workspace = true
rust-version.workspace = true

[features]
mock = []

[dependencies]
entity = { path = "entity" }
migration = { path = "migration" }
async-trait.workspace = true
base64.workspace = true
futures.workspace = true
libsqlite3-sys = { workspace = true, features = [
    "bundled-sqlcipher-vendored-openssl",
] }
mime.workspace = true
once_cell.workspace = true
p256 = { workspace = true, features = ["ecdsa", "std"] }
tokio = { workspace = true, features = [
    "rt-multi-thread",
    "parking_lot",
    "macros",
] }
tracing.workspace = true
reqwest = { workspace = true, features = ["json", "rustls-tls-webpki-roots"] }
ring.workspace = true
sea-orm = { workspace = true, features = [
    "sqlx-sqlite",
    "runtime-tokio-rustls",
] }
serde = { workspace = true, features = ["derive"] }
serde_json.workspace = true
thiserror.workspace = true
url.workspace = true

wallet_common = { path = "../wallet_common" }

# enable the "hardware" feature for platform_support when building for either Android or iOS
[target.'cfg(any(target_os = "android", target_os = "ios"))'.dependencies]
platform_support = { path = "../platform_support", features = ["hardware"] }

# enable the "software" feature for platform_support when NOT building for either Android or iOS
[target.'cfg(not(any(target_os = "android", target_os = "ios")))'.dependencies]
platform_support = { path = "../platform_support", features = ["software"] }

# enable the "software" feature for platform_support when running tests
[dev-dependencies]
wallet_provider = { path = "../wallet_provider", features = ["stub"] }
platform_support = { path = "../platform_support", features = [
    "software",
] }

tempfile.workspace = true
wiremock.workspace = true
