[package]
name = "wallet"
version.workspace = true
edition.workspace = true
rust-version.workspace = true

[features]
mock = ["dep:mockall"]
wallet_deps = []
disable_tls_validation = []

[dependencies]
async-trait = { workspace = true }
base64 = { workspace = true }
chrono = { workspace = true, features = ["std", "clock"] }
ciborium = { workspace = true }
futures = { workspace = true }
http = { workspace = true }
indexmap = { workspace = true }
libsqlite3-sys = { workspace = true, features = [
    "bundled-sqlcipher-vendored-openssl",
] }
mime = { workspace = true }
mockall = { workspace = true, optional = true }
once_cell = { workspace = true }
openid = { workspace = true, features = ["rustls"] }
p256 = { workspace = true, features = ["ecdsa", "std"] }
reqwest = { workspace = true, features = ["json", "rustls-tls-webpki-roots"] }
ring = { workspace = true }
sea-orm = { workspace = true, features = [
    "sqlx-sqlite",
    "runtime-tokio-rustls",
] }
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }
thiserror = { workspace = true }
tokio = { workspace = true, features = ["sync", "fs"] }
tracing = { workspace = true }
url = { workspace = true }

entity = { path = "entity" }
migration = { path = "migration" }
nl_wallet_mdoc = { path = "../mdoc", features = [
    "mock",
    "memory_storage",
] } # TODO remove features once actual storage is used
platform_support = { path = "../platform_support" }
wallet_common = { path = "../wallet_common" }

[dev-dependencies]
assert_matches = { workspace = true }
mockall = { workspace = true }
rstest = { workspace = true }
serial_test = { workspace = true }
tempfile = { workspace = true }
tokio = { workspace = true, features = ["rt", "macros"] }
wiremock = { workspace = true }

# enable the "software" feature for platform_support when running tests
platform_support = { path = "../platform_support", features = ["software"] }
