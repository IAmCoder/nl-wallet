[package]
name = "wallet"
version.workspace = true
edition.workspace = true
rust-version.workspace = true

[lints]
workspace = true

[lib]
doctest = false

[features]
allow_http_return_url = ["nl_wallet_mdoc/allow_http_return_url"]
disable_tls_validation = []
env_config = ["dep:dotenvy"]
mock = ["dep:mockall", "nl_wallet_mdoc/mdocs-map", "nl_wallet_mdoc/mock"]
wallet_deps = []

[dependencies]
base64.workspace = true
chrono = { workspace = true, features = ["std", "clock"] }
ciborium.workspace = true
futures.workspace = true
jsonwebtoken.workspace = true
http.workspace = true
indexmap.workspace = true
itertools.workspace = true
libsqlite3-sys = { workspace = true, features = [
    "bundled-sqlcipher-vendored-openssl",
] }
mime.workspace = true
once_cell.workspace = true
openid = { workspace = true, features = ["rustls"] }
p256 = { workspace = true, features = ["ecdsa", "std"] }
reqwest = { workspace = true, features = ["json", "rustls-tls-webpki-roots"] }
ring = { workspace = true, features = ["std"] }
sea-orm = { workspace = true, features = [
    "sqlx-sqlite",
    "runtime-tokio-rustls",
    "with-uuid",
] }
serde = { workspace = true, features = ["derive"] }
serde_json.workspace = true
serde_urlencoded.workspace = true
thiserror.workspace = true
tokio = { workspace = true, features = ["sync", "fs"] }
tracing.workspace = true
trait-variant.workspace = true
url.workspace = true
uuid = { workspace = true, features = ["v4"] }

mockall = { workspace = true, optional = true }

entity.path = "entity"
migration.path = "migration"
nl_wallet_mdoc.path = "../mdoc"
platform_support.path = "../platform_support"
wallet_common.path = "../wallet_common"

[dev-dependencies]
assert_matches.workspace = true
jsonwebtoken.workspace = true
mockall.workspace = true
rstest.workspace = true
serial_test.workspace = true
tempfile.workspace = true
tokio = { workspace = true, features = ["rt", "macros", "test-util"] }
wiremock.workspace = true

nl_wallet_mdoc = { path = "../mdoc", features = [
    "generate",
    "examples",
    "software-keys",
    "mdocs-map",
    "test",
    "mock",
] }
# enable the "software" feature for platform_support when running tests
platform_support = { path = "../platform_support", features = ["software"] }
wallet_common = { path = "../wallet_common", features = ["mock-p256-keys"] }

[build-dependencies]
dotenvy = { workspace = true, optional = true }
