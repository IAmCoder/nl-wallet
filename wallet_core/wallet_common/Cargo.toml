[package]
name = "wallet_common"
version.workspace = true
edition.workspace = true
rust-version.workspace = true

[lints]
workspace = true

[lib]
doctest = false

[features]
# Implement EcdsaKey and related traits for p256::ecdsa::SigningKey
mock_p256_keys = []
# Include SoftwareEcdsaKey, which implements EcdsaKey and related traits for testing
software_keys = ["dep:aes-gcm", "dep:rand_core"]
# Enable helper code for integration tests
integration_test = []

[dependencies]
base64.workspace = true
chrono = { workspace = true, features = ["std", "clock"] }
config.workspace = true
etag.workspace = true
futures.workspace = true
http.workspace = true
jsonwebtoken.workspace = true
nutype = { workspace = true, features = ["serde"] }
once_cell.workspace = true
p256 = { workspace = true, features = ["ecdsa", "pem", "serde", "std"] }
rand.workspace = true
ring.workspace = true
rustls-webpki.workspace = true
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true, features = ["raw_value"] }
serde_with = { workspace = true, features = ["base64"] }
sha2.workspace = true
thiserror.workspace = true
tokio = { workspace = true, features = ["rt"] }
url = { workspace = true, features = ["serde"] }

aes-gcm = { workspace = true, optional = true, features = ["std"] }
rand_core = { workspace = true, optional = true }

[dev-dependencies]
aes-gcm = { workspace = true, features = ["std"] }
rand_core.workspace = true
tokio = { workspace = true, features = [
    "rt-multi-thread",
    "macros",
    "parking_lot",
] }
