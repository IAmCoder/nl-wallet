[package]
name = "tests_integration"
version.workspace = true
edition.workspace = true
rust-version.workspace = true

[lints]
workspace = true

[[test]]
name = "config_server"
path = "tests/config_server.rs"
required-features = ["db_test", "hsm_test"]

[[test]]
name = "disclosure"
path = "tests/disclosure.rs"
required-features = ["db_test", "hsm_test"]

[[test]]
name = "issuance"
path = "tests/issuance.rs"
required-features = ["db_test", "hsm_test"]

[[test]]
name = "locking"
path = "tests/locking.rs"
required-features = ["db_test", "hsm_test"]

[[test]]
name = "registration"
path = "tests/registration.rs"
required-features = ["db_test", "hsm_test"]

[features]
# Allow the disclosure return URL and its prefix to use http://
allow_http_return_url = ["nl_wallet_mdoc/allow_http_return_url"]
# Include and run test that depend on an external PostgreSQL database
db_test = ["allow_http_return_url"]
hsm_test = []
digid_test = ["disable_tls_validation"]
disable_tls_validation = [
    "wallet_server/disable_tls_validation",
    "wallet/disable_tls_validation",
]
# Run performance test against external servers
performance_test = ["disable_tls_validation"]

[dependencies]
ciborium.workspace = true

[dev-dependencies]
assert_matches.workspace = true
base64.workspace = true
ctor.workspace = true
dotenvy.workspace = true
indexmap.workspace = true
jsonwebtoken.workspace = true
p256 = { workspace = true, features = ["pkcs8"] }
rand_core.workspace = true
regex.workspace = true
reqwest = { workspace = true, features = ["rustls-tls-webpki-roots"] }
rstest.workspace = true
sea-orm = { workspace = true, features = [
    "sqlx-sqlite",
    "sqlx-postgres",
    "runtime-tokio-rustls",
    "macros",
    "with-uuid",
    "debug-print",
] }
serde = { workspace = true, features = ["derive"] }
serde_json.workspace = true
serial_test.workspace = true
tokio = { workspace = true, features = ["rt", "macros", "sync"] }
tracing.workspace = true
tracing-subscriber.workspace = true
url.workspace = true
uuid.workspace = true

configuration_server = { path = "../configuration_server" }
nl_wallet_mdoc = { path = "../mdoc", features = [
    "generate",
    "software_key_factory",
    "test",
    "mock",
] } # Enable the features necessary to run all integration tests
openid4vc = { path = "../openid4vc" }
platform_support = { path = "../platform_support", features = ["software"] }
wallet = { path = "../wallet", features = [
    "mock",
    "wallet_deps",
    "env_config",
] }
wallet_common.path = "../wallet_common"
wallet_provider = { path = "../wallet_provider" }
wallet_provider_persistence = { path = "../wallet_provider/persistence" }
wallet_provider_service = { path = "../wallet_provider/service", features = [
    "software_keys",
    "mock",
] } # Enable the features necessary to run all integration tests, minus "db_test" and "hsm_test"
wallet_server = { path = "../wallet_server" }
