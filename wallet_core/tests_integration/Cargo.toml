[package]
name = "tests_integration"
version.workspace = true
edition.workspace = true
rust-version.workspace = true

[lints]
workspace = true

[[bin]]
name = "performance_test"
required-features = ["performance_test"]

[[test]]
name = "config_server"
path = "tests/config_server.rs"
required-features = ["integration_test"]

[[test]]
name = "digid_issuance"
path = "tests/digid_issuance.rs"
required-features = ["digid_test"]

[[test]]
name = "disclosure"
path = "tests/disclosure.rs"
required-features = ["integration_test"]

[[test]]
name = "issuance"
path = "tests/issuance.rs"
required-features = ["integration_test", "issuance"]

[[test]]
name = "locking"
path = "tests/locking.rs"
required-features = ["integration_test"]

[[test]]
name = "registration"
path = "tests/registration.rs"
required-features = ["integration_test"]

[features]
default = ["issuance"]
# Allow the disclosure return URL and its prefix to use http://
allow_http_return_url = ["nl_wallet_mdoc?/allow_http_return_url"]
issuance = ["wallet_server?/issuance"]
# Include the common submodule, which includes code all integration tests use.
test_common = [
    "dep:ctor",
    "dep:indexmap",
    "dep:jsonwebtoken",
    "dep:reqwest",
    "dep:sea-orm",
    "dep:serde_json",
    "dep:tokio",
    "dep:tracing",
    "dep:tracing-subscriber",
    "dep:configuration_server",
    "dep:nl_wallet_mdoc",
    "dep:openid4vc",
    "dep:platform_support",
    "dep:wallet",
    "dep:wallet_common",
    "dep:wallet_provider",
    "dep:wallet_provider_persistence",
    "dep:wallet_server",
]
# Include the fake_digid submodule
fake_digid = ["dep:reqwest", "dep:url", "dep:wallet_common"]
# Include and run test that depend on an external PostgreSQL database
db_test = ["wallet_provider_persistence?/db_test", "wallet_provider_service/db_test", "wallet_server?/db_test"]
# Include and run test that depend on a configured HSM
hsm_test = ["wallet_provider?/hsm_test"]
# Feature used for enabling all integration tests
integration_test = [
    "allow_http_return_url",
    "test_common",
    "db_test",
    "hsm_test",
    "dep:assert_matches",
    "dep:p256",
    "dep:rand_core",
    "dep:regex",
    "dep:rstest",
    "dep:serial_test",
    "tokio/macros",
    "tokio/sync",
    "dep:url",
]
# Optional feature for running integration tests that depend on the DigiD connector
digid_test = ["fake_digid", "integration_test", "dep:gba_hc_converter"]
# Should be enabled when building the performance_test binary
performance_test = [
    "fake_digid",
    "dep:ctor",
    "dep:indexmap",
    "dep:reqwest",
    "dep:tokio",
    "dep:tracing",
    "dep:tracing-subscriber",
    "dep:tracing",
    "dep:url",
    "dep:uuid",
    "dep:nl_wallet_mdoc",
    "dep:openid4vc",
    "dep:platform_support",
    "dep:wallet",
    "dep:wallet_common",
    "dep:wallet_server",
    "dep:dotenvy",
]

[dependencies]
assert_matches = { workspace = true, optional = true }
ctor = { workspace = true, optional = true }
indexmap = { workspace = true, optional = true }
jsonwebtoken = { workspace = true, optional = true }
reqwest = { workspace = true, optional = true, features = ["rustls-tls-webpki-roots"] }
sea-orm = { workspace = true, optional = true, features = [
    "sqlx-postgres",
    "runtime-tokio-rustls",
    "macros",
    "with-uuid",
    "debug-print",
] }
serde_json = { workspace = true, optional = true }
p256 = { workspace = true, optional = true, features = ["pkcs8"] }
rand_core = { workspace = true, optional = true }
regex = { workspace = true, optional = true }
rstest = { workspace = true, optional = true }
serial_test = { workspace = true, optional = true }
tokio = { workspace = true, optional = true, features = ["rt", "time", "parking_lot"] }
tracing = { workspace = true, optional = true }
tracing-subscriber = { workspace = true, optional = true }
url = { workspace = true, optional = true }
uuid = { workspace = true, optional = true }

gba_hc_converter = { path = "../gba_hc_converter", optional = true }
configuration_server = { path = "../configuration_server", optional = true }
nl_wallet_mdoc = { path = "../mdoc", optional = true, features = ["generate"] }
openid4vc = { path = "../openid4vc", optional = true }
platform_support = { path = "../platform_support", optional = true, features = ["software"] }
wallet = { path = "../wallet", optional = true, features = ["mock", "wallet_deps", "env_config"] }
wallet_common = { path = "../wallet_common", optional = true }
wallet_provider = { path = "../wallet_provider", optional = true }
wallet_provider_persistence = { path = "../wallet_provider/persistence", optional = true }
wallet_server = { path = "../wallet_server", optional = true, features = ["mock"] }

[build-dependencies]
dotenvy = { workspace = true, optional = true }

[dev-dependencies]
# This enables the automatic running of integration tests for these crates when tests
# are run from the workspace. The following features are not included in this:
# * hsm_test
# * db_test
nl_wallet_mdoc = { path = "../mdoc", features = ["integration"] }
openid4vc = { path = "../openid4vc", features = ["integration"] }
wallet_provider_service.path = "../wallet_provider/service"
