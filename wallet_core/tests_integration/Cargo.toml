[package]
name = "tests_integration"
version.workspace = true
edition.workspace = true
rust-version.workspace = true

[lints]
workspace = true

[features]
allow_http_return_url = ["nl_wallet_mdoc/allow_http_return_url"]
db_test = ["allow_http_return_url"]
live_test = []
digid_test = ["disable_tls_validation"]
disable_tls_validation = [
    "allow_http_return_url",
    "wallet_server/disable_tls_validation",
    "wallet/disable_tls_validation",
]

[dependencies]

[dev-dependencies]
assert_matches.workspace = true
base64.workspace = true
ctor.workspace = true
indexmap.workspace = true
p256 = { workspace = true, features = ["ecdsa"] }
regex.workspace = true
reqwest = { workspace = true, features = ["rustls-tls-webpki-roots"] }
rstest.workspace = true
sea-orm = { workspace = true, features = [
    "sqlx-sqlite",
    "runtime-tokio-rustls",
    "macros",
    "with-uuid",
    "debug-print",
] }
serial_test.workspace = true
tokio = { workspace = true, features = ["rt", "macros", "sync"] }
tracing.workspace = true
tracing-subscriber.workspace = true
url.workspace = true

nl_wallet_mdoc = { path = "../mdoc", features = ["mock", "generate"] }
openid4vc = { path = "../openid4vc" }
platform_support = { path = "../platform_support", features = ["software"] }
wallet = { path = "../wallet", features = [
    "mock",
    "wallet_deps",
    "env_config",
] }
wallet_common = { path = "../wallet_common", features = ["software-keys"] }
wallet_provider = { path = "../wallet_provider" }
wallet_provider_database_settings = { path = "../wallet_provider/database_settings" }
wallet_provider_domain = { path = "../wallet_provider/domain" }
wallet_provider_persistence = { path = "../wallet_provider/persistence" }
wallet_provider_service = { path = "../wallet_provider/service" }
wallet_server = { path = "../wallet_server" }
