[package]
name = "wallet_provider_service"
version.workspace = true
edition.workspace = true
rust-version.workspace = true

[lints]
workspace = true

[lib]
doctest = false

[[test]]
name = "account_server"
path = "tests/account_server.rs"
required-features = ["db_test"]

[features]
# Implement InstructionResultSigningKey and related traits on SoftwareEcdsaKey
software_keys = ["wallet_common/software_keys"]
# Include mock implementations and constructors for testing
mock = ["dep:hmac", "wallet_provider_domain/mock"]
# Include and run test that depend on an external PostgreSQL database
db_test = ["software_keys", "mock", "dep:tracing-subscriber", "dep:wallet_provider_database_settings"]

[dependencies]
chrono = { workspace = true, features = ["std", "clock"] }
cryptoki.workspace = true
der = { workspace = true, features = ["std"] }
futures.workspace = true
jsonwebtoken.workspace = true
p256 = { workspace = true, features = ["ecdsa", "pem", "std"] }
r2d2-cryptoki.workspace = true
sec1.workspace = true
serde = { workspace = true, features = ["derive"] }
serde_json.workspace = true
serde_with = { workspace = true, features = ["base64"] }
sha2.workspace = true
thiserror.workspace = true
tracing.workspace = true
tracing-subscriber = { workspace = true, optional = true, features = [
    "std",
    "fmt",
    "ansi",
    "tracing-log",
    "parking_lot",
] }
uuid = { workspace = true, features = ["v4"] }

hmac = { workspace = true, optional = true, features = ["std"] }

wallet_provider_database_settings = { path = "../database_settings", optional = true }
wallet_provider_domain.path = "../domain"
wallet_common.path = "../../wallet_common"

[dev-dependencies]
assert_matches.workspace = true
hmac = { workspace = true, features = ["std"] }
rand.workspace = true
rstest.workspace = true
tokio = { workspace = true, features = ["rt", "macros", "parking_lot"] }

wallet_common = { path = "../../wallet_common", features = ["mock_secure_keys", "software_keys"] }
wallet_provider_domain = { path = "../domain", features = ["mock"] }
wallet_provider_persistence = { path = "../persistence", features = ["mock"] }
