variables:
  FLUTTER_APP_PROJECT_DIR: "wallet_app"

stages:
  - test
  - build
  - deploy

# Working directory is 'wallet_app' directory
analyze-app:
  stage: test
  only:
    - merge_requests
    - main
    - /^(alpha|beta|release)\/\d+\.\d+\.\d+$/
  image:
    name: "${HARBOR_REGISTRY}/${HARBOR_NLW_PROJECT}/nl-wallet-app-builder-flutter@sha256:78144d89bd12f3937eb9bd1cb768f15bef40bbe7415ec43c4a2cc292e8ad9d95"
  script:
    - set -euxo pipefail
    - flutter --version
    - flutter pub get $FLUTTER_APP_PROJECT_DIR
    - flutter analyze $FLUTTER_APP_PROJECT_DIR
    
test-flutter:
  stage: test
  only:
    - merge_requests
    - main
    - /^(alpha|beta|release)\/\d+\.\d+\.\d+$/
  image:
    name: "${HARBOR_REGISTRY}/${HARBOR_NLW_PROJECT}/nl-wallet-app-builder-flutter@sha256:78144d89bd12f3937eb9bd1cb768f15bef40bbe7415ec43c4a2cc292e8ad9d95"
  script:
    - set -euxo pipefail
    - flutter --version
    - (cd $FLUTTER_APP_PROJECT_DIR; flutter test --exclude-tags=golden)

test-flutter-ui:
  stage: test
  only:
    - merge_requests
    - main
    - /^(alpha|beta|release)\/\d+\.\d+\.\d+$/
  when: manual
  tags:
    - macos
  artifacts:
    name: "ui-test-failures"
    when: on_failure
    paths:
      - "**/failures/*.png"
  script:
    - set -euxo pipefail
    - flutter --version
    - (cd $FLUTTER_APP_PROJECT_DIR; flutter test --tags=golden)

test-rust:
  stage: test
  only:
    - merge_requests
    - main
    - /^(alpha|beta|release)\/\d+\.\d+\.\d+$/
  image:
    name: "${HARBOR_REGISTRY}/${HARBOR_NLW_PROJECT}/nl-wallet-app-builder-rust@sha256:ddb2ed35c98e1d30809307da8a5ec17f356f09c0be934773fc6ae95ae31f43b3"
  script:
    - set -euxo pipefail
    - cargo test --manifest-path wallet_core/Cargo.toml

test-ios:
  stage: test
  only:
    - merge_requests
    - main
    - /^(alpha|beta|release)\/\d+\.\d+\.\d+$/
  when: manual
  tags:
    - macos
  artifacts:
    name: "test_output"
    when: on_failure
    paths:
      - "**/fastlane/test_output/*"
  variables:
    FASTLANE_OPT_OUT_USAGE: "YES"
  script:
    - bundle install
    - bundle exec fastlane disable_flutter_analytics
    - bundle exec fastlane ios test

test-rust-analyze:
  stage: test
  only:
    - merge_requests
    - main
    - /^(alpha|beta|release)\/\d+\.\d+\.\d+$/
  image:
    name: "${HARBOR_REGISTRY}/${HARBOR_NLW_PROJECT}/nl-wallet-app-builder-rust@sha256:ddb2ed35c98e1d30809307da8a5ec17f356f09c0be934773fc6ae95ae31f43b3"
  script:
    - set -euxo pipefail
    - find wallet_core -mindepth 2 -type f -name Cargo.toml -print0 | xargs -0 -n1 cargo fmt --manifest-path
    - git diff
    - if [ $(git diff --shortstat | wc -l) -gt 0 ]; then echo "Rust formatting results in different files!"; exit 1; fi
    - cargo clippy --manifest-path wallet_core/Cargo.toml --all-features --tests -- -Dwarnings
    - grep ^exclude wallet_core/Cargo.toml | grep -oP '".*?"' | tr -d '"' | xargs -I "{}" cargo clippy --manifest-path wallet_core/{}/Cargo.toml --all-features --tests -- -Dwarnings

test-codegen:
  stage: test
  only:
    - merge_requests
    - main
    - /^(alpha|beta|release)\/\d+\.\d+\.\d+$/
  image:
    name: "${HARBOR_REGISTRY}/${HARBOR_NLW_PROJECT}/nl-wallet-app-builder-flutter-rust@sha256:40be71808f60718d32956cb9461361d8354beeb2cd9b9a808787e90e5650453b"
  script:
    - set -euxo pipefail
    - flutter pub get $FLUTTER_APP_PROJECT_DIR
    - cargo run --manifest-path wallet_core/flutter_rust_bridge_codegen/Cargo.toml
    - cargo run --manifest-path wallet_core/Cargo.toml --bin serde_reflection_codegen --features serde_reflection_codegen
    - git diff
    - if [ $(git diff --shortstat | wc -l) -gt 0 ]; then echo "Code generation results in different files!"; exit 1; fi

build-android-app:
  stage: build
  only:
    - main
    - /^(alpha|beta|release)\/\d+\.\d+\.\d+$/
  image:
    name: "${HARBOR_REGISTRY}/${HARBOR_NLW_PROJECT}/nl-wallet-app-builder-android-flutter-rust@sha256:20c2046010b2b23f1ebd62fac130f27741657d00ec1a8ca54a790df4fb6d10e5"
  artifacts:
    name: "wallet-android"
    paths:
      - "*.aab"
  environment:
    name: ${K8S_CLUSTER}
    kubernetes:
      namespace: ${K8S_NAMESPACE}
  variables:
    LC_ALL: "C.UTF-8"
    LANG: "C.UTF-8"
    FASTLANE_OPT_OUT_USAGE: "YES"
  script:
    - bundle install
    - bundle exec fastlane disable_flutter_analytics
    - bundle exec fastlane android ci_build

deploy-android-app:
  stage: deploy
  only:
    - main
    - /^(alpha|beta|release)\/\d+\.\d+\.\d+$/
  image:
    name: "${HARBOR_REGISTRY}/${HARBOR_NLW_PROJECT}/nl-wallet-app-builder-fastlane@sha256:bacbe75f2e5a7b8cc556dfd320a884a2efd2ccd96a049a06bad8dceb6cbd70b2"
  needs:
    - build-android-app
  dependencies:
    - build-android-app
  environment:
    name: ${K8S_CLUSTER}
    kubernetes:
      namespace: ${K8S_NAMESPACE}
  variables:
    LC_ALL: "C.UTF-8"
    LANG: "C.UTF-8"
    FASTLANE_OPT_OUT_USAGE: "YES"
  script:
    - bundle install
    - bundle exec fastlane android ci_deploy

upload-browserstack-android-app:
  stage: deploy
  only:
    - main
  image:
    name: "${HARBOR_REGISTRY}/${HARBOR_NLW_PROJECT}/nl-wallet-app-builder-fastlane@sha256:bacbe75f2e5a7b8cc556dfd320a884a2efd2ccd96a049a06bad8dceb6cbd70b2"
  needs:
    - build-android-app
  dependencies:
    - build-android-app
  environment:
    name: ${K8S_CLUSTER}
    kubernetes:
      namespace: ${K8S_NAMESPACE}
  variables:
    LC_ALL: "C.UTF-8"
    LANG: "C.UTF-8"
    FASTLANE_OPT_OUT_USAGE: "YES"
  script:
    - bundle install
    - bundle exec fastlane android ci_browserstack

build-ios-app:
  stage: build
  only:
    - main
    - /^(alpha|beta|release)\/\d+\.\d+\.\d+$/
  when: manual
  tags:
    - macos
  artifacts:
    name: "wallet-ios"
    paths:
      - "*.ipa"
  environment:
    name: ${K8S_CLUSTER}
    kubernetes:
      namespace: ${K8S_NAMESPACE}
  variables:
    FASTLANE_OPT_OUT_USAGE: "YES"
  script:
    - bundle install
    - bundle exec fastlane disable_flutter_analytics
    - bundle exec fastlane ios ci_build

deploy-ios-app:
  stage: deploy
  only:
    - main
    - /^(alpha|beta|release)\/\d+\.\d+\.\d+$/
  needs:
    - build-ios-app
  dependencies:
    - build-ios-app
  tags:
    - macos
  environment:
    name: ${K8S_CLUSTER}
    kubernetes:
      namespace: ${K8S_NAMESPACE}
  variables:
    FASTLANE_OPT_OUT_USAGE: "YES"
  script:
    - bundle install
    - bundle exec fastlane disable_flutter_analytics
    - bundle exec fastlane ios ci_deploy

upload-browserstack-ios-app:
  stage: deploy
  only:
    - main
  image:
    name: "${HARBOR_REGISTRY}/${HARBOR_NLW_PROJECT}/nl-wallet-app-builder-fastlane@sha256:bacbe75f2e5a7b8cc556dfd320a884a2efd2ccd96a049a06bad8dceb6cbd70b2"
  needs:
    - build-ios-app
  dependencies:
    - build-ios-app
  environment:
    name: ${K8S_CLUSTER}
    kubernetes:
      namespace: ${K8S_NAMESPACE}
  variables:
    LC_ALL: "C.UTF-8"
    LANG: "C.UTF-8"
    FASTLANE_OPT_OUT_USAGE: "YES"
  script:
    - bundle install
    - bundle exec fastlane ios ci_browserstack

run-automation-tests:
  stage: test
  only:
    - main
  when: manual  
  image:
    name: "${HARBOR_REGISTRY}/${HARBOR_NLW_PROJECT}/nl-wallet-app-builder-jdk11@sha256:cee3ea4a60a040a2bfd2c493b97c79b3461f443ff69bc38a6061669e7a29c015"
  artifacts:
    when: always
    paths:
      - uiautomation/build/test-results
      - uiautomation/build/reports
  environment:
    name: ${K8S_CLUSTER}
    kubernetes:
     namespace: ${K8S_NAMESPACE}
  script:
    - export BROWSERSTACK_USER=$(kubectl get secret nl-wallet-browserstack -o jsonpath='{.data.user}' | base64 --decode)
    - export BROWSERSTACK_KEY=$(kubectl get secret nl-wallet-browserstack -o jsonpath='{.data.key}' | base64 --decode)
    - set -euxo pipefail
    - java -version
    - cd uiautomation
    - gradle wrapper --gradle-version=7.3.3
    - ./gradlew --debug --stacktrace test --tests uiTests.IntroductionScreenTests.verifyIntroductionScreens
