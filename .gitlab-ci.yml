variables:
  FLUTTER_APP_PROJECT_DIR: "wallet_app"
  RENEW_ON_LETSENCRYPT_STAGING:
    value: "false"
    description: "Try to renew the wallet_provider server certificate from the Let's encrypt staging environment."
  RENEW_ON_LETSENCRYPT_LIVE:
    value: "false"
    description: "Try to renew the wallet_provider server certificate from the Let's encrypt live environment."

stages:
  - test
  - build
  - deploy

.docker-sp:
  environment:
    name: ${K8S_CLUSTER}
    action: prepare

.env-sp:
  environment:
    action: prepare
    name: ${K8S_CLUSTER}
    kubernetes:
      namespace: ${K8S_NAMESPACE}

.deploy-sp:
  extends: .env-sp
  dependencies: [ ]
  image: $HARBOR_REGISTRY/$DOCKER_HUB_PROXY/bitnami/kubectl@sha256:ebace7799e1fcf6abc4080c7026d1c549310b2d4c6a37a1937773d5fd9d559b7 # 1.23.15
  resource_group: testcluster
  environment:
    action: start

.kaniko:
  extends: .docker-sp
  before_script:
    - echo $DOCKER_AUTH_CONFIG > /kaniko/.docker/config.json
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]

.default-sonar:
  stage: test
  rules: !reference [ .default-or-release-or-merge-request, rules ]
  image:
    name: "$HARBOR_REGISTRY/$DOCKER_HUB_PROXY/sonarsource/sonar-scanner-cli@sha256:4ec8e00440c58ce4c898bea35439a0542b2ce7767fe207cf0935a553ab4c90db" # 4.8.0

.default-branch:
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

.default-or-release:
  rules:
    - !reference [ .default-branch, rules ]
    - if: $CI_COMMIT_BRANCH =~ /^(alpha|beta|release)\/\d+\.\d+\.\d+$/

.default-or-release-or-merge-request:
  rules:
    - !reference [ .default-or-release, rules ]
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

# Working directory is 'wallet_app' directory
analyze-app:
  stage: test
  rules: !reference [ .default-or-release-or-merge-request, rules ]
  image:
    name: "${HARBOR_REGISTRY}/${HARBOR_NLW_PROJECT}/nl-wallet-app-builder-flutter@sha256:78144d89bd12f3937eb9bd1cb768f15bef40bbe7415ec43c4a2cc292e8ad9d95"
  script:
    - set -euxo pipefail
    - flutter --version
    - flutter pub get $FLUTTER_APP_PROJECT_DIR
    - flutter analyze $FLUTTER_APP_PROJECT_DIR

test-flutter:
  stage: test
  rules: !reference [ .default-or-release-or-merge-request, rules ]
  image:
    name: "${HARBOR_REGISTRY}/${HARBOR_NLW_PROJECT}/nl-wallet-app-builder-flutter@sha256:78144d89bd12f3937eb9bd1cb768f15bef40bbe7415ec43c4a2cc292e8ad9d95"
  script:
    - set -euxo pipefail
    - flutter --version
    - (cd $FLUTTER_APP_PROJECT_DIR; flutter test --exclude-tags=golden --coverage)
  artifacts:
    paths:
      - $FLUTTER_APP_PROJECT_DIR/coverage/lcov.info

test-flutter-ui:
  stage: test
  rules: !reference [ .default-or-release-or-merge-request, rules ]
  when: manual
  tags:
    - macos
  artifacts:
    name: "ui-test-failures"
    when: on_failure
    paths:
      - "**/failures/*.png"
  script:
    - set -euxo pipefail
    - flutter --version
    - (cd $FLUTTER_APP_PROJECT_DIR; flutter test --tags=golden)

test-rust:
  stage: test
  rules: !reference [ .default-or-release-or-merge-request, rules ]
  image:
    name: "${HARBOR_REGISTRY}/${HARBOR_NLW_PROJECT}/nl-wallet-app-builder-rust@sha256:d2d609bb6e8814d68c9045a56bbf5c5219e1b69e4935502a444d47dbcb306c41"
  before_script:
    - cd wallet_core
  script:
    - set -euxo pipefail
    - cargo llvm-cov test --lcov --output-path lcov.info
    - cargo llvm-cov report --cobertura --output-path coverage.xml
  artifacts:
    reports:
      coverage_report:
        path: wallet_core/coverage.xml
        coverage_format: cobertura
    paths:
      - wallet_core/lcov.info

test-ios:
  stage: test
  rules: !reference [ .default-or-release-or-merge-request, rules ]
  when: manual
  tags:
    - macos
  artifacts:
    name: "test_output"
    when: on_failure
    paths:
      - "**/fastlane/test_output/*"
  variables:
    FASTLANE_OPT_OUT_USAGE: "YES"
  script:
    - bundle install
    - bundle exec fastlane disable_flutter_analytics
    - bundle exec fastlane ios test

test-rust-analyze:
  stage: test
  rules: !reference [ .default-or-release-or-merge-request, rules ]
  image:
    name: "${HARBOR_REGISTRY}/${HARBOR_NLW_PROJECT}/nl-wallet-app-builder-rust@sha256:d2d609bb6e8814d68c9045a56bbf5c5219e1b69e4935502a444d47dbcb306c41"
  script:
    - set -euxo pipefail
    - find wallet_core -mindepth 2 -type f -name Cargo.toml -print0 | xargs -0 -n1 cargo fmt --manifest-path
    - git diff
    - if [ $(git diff --shortstat | wc -l) -gt 0 ]; then echo "Rust formatting results in different files!"; exit 1; fi
    - cargo clippy --manifest-path wallet_core/Cargo.toml --all-features --tests -- -Dwarnings
    - grep ^exclude wallet_core/Cargo.toml | grep -oP '".*?"' | tr -d '"' | xargs -I "{}" cargo clippy --manifest-path wallet_core/{}/Cargo.toml --all-features --tests -- -Dwarnings
    # do not let the result of cargo audit fail the job (for now)
    - cargo audit --file wallet_core/Cargo.lock --json > audit.json || true
  artifacts:
    paths:
      - audit.json

sonar-rust:
  extends: .default-sonar
  needs:
    - test-rust
    - test-rust-analyze
  before_script:
    - cd wallet_core
  script:
    - sonar-scanner -Dsonar.projectKey=nl-wallet-demo-app-rust -Dsonar.exclusions="target/**,platform_support/android/**,platform_support/ios/**"

sonar-flutter:
  stage: test
  rules: !reference [ .default-or-release-or-merge-request, rules ]
  needs:
    - test-flutter
  image:
    name: "${HARBOR_REGISTRY}/${HARBOR_NLW_PROJECT}/nl-wallet-app-builder-sonar-flutter@sha256:ead1449a563306a6ef6b277f22fae7eebed1a288d951e213649f62e4922fae0c"
  before_script:
    - cd $FLUTTER_APP_PROJECT_DIR
  script:
    - sonar-scanner -Dsonar.projectKey=nl-wallet-demo-app-flutter -Dsonar.exclusions="android/**,ios/**"

sonar-ios:
  extends: .default-sonar
  before_script:
    - cd wallet_core/platform_support/ios
  script:
    - sonar-scanner -Dsonar.projectKey=nl-wallet-demo-app-ios -Dsonar.exclusions="*Tests*/**" -Dsonar.c.file.suffixes=- -Dsonar.cpp.file.suffixes=- -Dsonar.objc.file.suffixes=-

sonar-android:
  extends: .default-sonar
  before_script:
    - cd wallet_core/platform_support/android
  script:
    - sonar-scanner -Dsonar.projectKey=nl-wallet-demo-app-android -Dsonar.exclusions="platform_support/build/**,platform_support/src/androidTest/**" -Dsonar.findbugs.allowuncompiledcode=true

test-codegen:
  stage: test
  rules: !reference [ .default-or-release-or-merge-request, rules ]
  image:
    name: "${HARBOR_REGISTRY}/${HARBOR_NLW_PROJECT}/nl-wallet-app-builder-flutter-rust@sha256:40be71808f60718d32956cb9461361d8354beeb2cd9b9a808787e90e5650453b"
  script:
    - set -euxo pipefail
    - flutter pub get $FLUTTER_APP_PROJECT_DIR
    - cargo run --manifest-path wallet_core/flutter_rust_bridge_codegen/Cargo.toml
    - cargo run --manifest-path wallet_core/Cargo.toml --bin serde_reflection_codegen --features serde_reflection_codegen
    - git diff
    - if [ $(git diff --shortstat | wc -l) -gt 0 ]; then echo "Code generation results in different files!"; exit 1; fi

build-wp-image:
  extends: .kaniko
  stage: build
  rules: !reference [ .default-or-release, rules ]
  script:
    - /kaniko/executor
      --context wallet_core
      --build-arg HARBOR_REGISTRY=$HARBOR_REGISTRY
      --build-arg HARBOR_NLW_PROJECT=$HARBOR_NLW_PROJECT
      --destination $HARBOR_REGISTRY/$HARBOR_NLW_PROJECT/nl-wallet-provider:$CI_COMMIT_SHORT_SHA
      --cache=true

build-android-app:
  extends: .env-sp
  stage: build
  rules: !reference [ .default-or-release, rules ]
  image:
    name: "${HARBOR_REGISTRY}/${HARBOR_NLW_PROJECT}/nl-wallet-app-builder-android-flutter-rust@sha256:20c2046010b2b23f1ebd62fac130f27741657d00ec1a8ca54a790df4fb6d10e5"
  artifacts:
    name: "wallet-android"
    paths:
      - "*.aab"
      - "*.apk"
  variables:
    LC_ALL: "C.UTF-8"
    LANG: "C.UTF-8"
    FASTLANE_OPT_OUT_USAGE: "YES"
  script:
    - bundle install
    - bundle exec fastlane disable_flutter_analytics
    - bundle exec fastlane android ci_build

deploy-android-app:
  extends: .env-sp
  stage: deploy
  rules: !reference [ .default-or-release, rules ]
  image:
    name: "${HARBOR_REGISTRY}/${HARBOR_NLW_PROJECT}/nl-wallet-app-builder-fastlane@sha256:bacbe75f2e5a7b8cc556dfd320a884a2efd2ccd96a049a06bad8dceb6cbd70b2"
  needs:
    - build-android-app
  dependencies:
    - build-android-app
  variables:
    LC_ALL: "C.UTF-8"
    LANG: "C.UTF-8"
    FASTLANE_OPT_OUT_USAGE: "YES"
  script:
    - bundle install
    - bundle exec fastlane android ci_deploy

upload-browserstack-android-app:
  extends: .env-sp
  stage: deploy
  rules: !reference [ .default-branch, rules ]
  image:
    name: "${HARBOR_REGISTRY}/${HARBOR_NLW_PROJECT}/nl-wallet-app-builder-fastlane@sha256:bacbe75f2e5a7b8cc556dfd320a884a2efd2ccd96a049a06bad8dceb6cbd70b2"
  needs:
    - build-android-app
  dependencies:
    - build-android-app
  variables:
    LC_ALL: "C.UTF-8"
    LANG: "C.UTF-8"
    FASTLANE_OPT_OUT_USAGE: "YES"
  script:
    - bundle install
    - bundle exec fastlane android ci_browserstack

build-ios-app:
  extends: .env-sp
  stage: build
  rules: !reference [ .default-or-release, rules ]
  when: manual
  tags:
    - macos
  artifacts:
    name: "wallet-ios"
    paths:
      - "*.ipa"
  variables:
    FASTLANE_OPT_OUT_USAGE: "YES"
  script:
    - bundle install
    - bundle exec fastlane disable_flutter_analytics
    - bundle exec fastlane ios ci_build

deploy-ios-app:
  extends: .env-sp
  stage: deploy
  rules: !reference [ .default-or-release, rules ]
  needs:
    - build-ios-app
  dependencies:
    - build-ios-app
  tags:
    - macos
  variables:
    FASTLANE_OPT_OUT_USAGE: "YES"
  script:
    - bundle install
    - bundle exec fastlane disable_flutter_analytics
    - bundle exec fastlane ios ci_deploy

upload-browserstack-ios-app:
  extends: .env-sp
  stage: deploy
  rules: !reference [ .default-branch, rules ]
  image:
    name: "${HARBOR_REGISTRY}/${HARBOR_NLW_PROJECT}/nl-wallet-app-builder-fastlane@sha256:bacbe75f2e5a7b8cc556dfd320a884a2efd2ccd96a049a06bad8dceb6cbd70b2"
  needs:
    - build-ios-app
  dependencies:
    - build-ios-app
  variables:
    LC_ALL: "C.UTF-8"
    LANG: "C.UTF-8"
    FASTLANE_OPT_OUT_USAGE: "YES"
  script:
    - bundle install
    - bundle exec fastlane ios ci_browserstack

deploy-wallet-provider:
  extends: .deploy-sp
  stage: deploy
  rules: !reference [ .default-branch, rules ]
  when: manual
  needs:
    - build-wp-image
  script:
    - cat kubernetes/servicemonitors.yaml
      | sed "s;{{K8S_NAMESPACE}};${K8S_NAMESPACE};g"
      | kubectl apply -f -
    - cat kubernetes/wallet-provider-configmap.yaml | kubectl apply -f -
    - cat kubernetes/wallet-provider-deployment.yaml
      | sed "s;{{WALLET_PROVIDER_IMAGE}};${HARBOR_REGISTRY}/${HARBOR_NLW_PROJECT}/nl-wallet-provider:${CI_COMMIT_SHORT_SHA};g"
      | kubectl apply -f -
    - cat kubernetes/wallet-provider-ingress.yaml
      | sed "s;{{INTERNAL_HOSTNAME}};${WALLET_PROVIDER_INTERNAL_HOSTNAME};g"
      | sed "s;{{EXTERNAL_HOSTNAME}};${WALLET_PROVIDER_EXTERNAL_HOSTNAME};g"
      | sed "s;{{EXTERNAL_CONTEXT_PATH}};${WALLET_PROVIDER_EXTERNAL_CONTEXT_PATH};g"
      | kubectl apply -f -
    - cat kubernetes/wallet-provider-service.yaml | kubectl apply -f -
    - kubectl rollout status deployment/wallet-provider

deploy-wallet-provider-staging-cert:
  extends: .deploy-sp
  stage: deploy
  rules:
    - if: ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_PIPELINE_SOURCE == "schedule") && $RENEW_ON_LETSENCRYPT_STAGING == "true"
  script:
    - cat kubernetes/stage/cert.yaml | sed "s;{{EXTERNAL_HOSTNAME}};${WALLET_PROVIDER_EXTERNAL_HOSTNAME};g" | kubectl apply -f -
    - kubectl wait --for condition="ready" --timeout=180s -f kubernetes/stage/cert.yaml

deploy-wallet-provider-live-cert:
  extends: .deploy-sp
  stage: deploy
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule" && $RENEW_ON_LETSENCRYPT_LIVE == "true"
  script:
    - cat kubernetes/live/cert.yaml | sed "s;{{EXTERNAL_HOSTNAME}};${WALLET_PROVIDER_EXTERNAL_HOSTNAME};g" | kubectl apply -f -
    - kubectl wait --for condition="ready" --timeout=180s -f kubernetes/live/cert.yaml

run-automation-tests:
  extends: .env-sp
  stage: test
  rules:
    - if: $RUN_AUTOMATION_TESTS == "true" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: always
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: manual
      allow_failure: true
  image:
    name: "${HARBOR_REGISTRY}/${HARBOR_NLW_PROJECT}/nl-wallet-app-builder-jdk11@sha256:3cc0a5f36cd3a006350777254bbce025b67873d07dc2f71574f30e6ba92f9322"
  artifacts:
    when: always
    paths:
      - uiautomation/build/test-results
      - uiautomation/build/reports
  script:
    - export BROWSERSTACK_USER=$(kubectl get secret nl-wallet-browserstack -o jsonpath='{.data.user}' | base64 --decode)
    - export BROWSERSTACK_KEY=$(kubectl get secret nl-wallet-browserstack -o jsonpath='{.data.key}' | base64 --decode)
    - set -euxo pipefail
    - java -version
    - cd uiautomation
    - gradle wrapper --gradle-version=7.3.3
    - ./gradlew --debug --stacktrace test --tests uiTests.IntroductionScreenTests.verifyIntroductionScreens
