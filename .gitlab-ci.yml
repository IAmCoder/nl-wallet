variables:
  FLUTTER_APP_PROJECT_DIR: "wallet_app"

stages:
  - test
  - build
  - deploy

# Working directory is 'wallet_app' directory
analyze-app:
  stage: test
  only:
    - merge_requests
    - main
    - /^(alpha|beta|release)\/\d+\.\d+\.\d+$/
  image:
    name: "${HARBOR_REGISTRY}/${HARBOR_NLW_PROJECT}/nl-wallet-app-builder-flutter@sha256:9ca719afd0f3a3041334ba62eb8c91f0cd61031f4a59697d98260105cc9a2eaf"
  script:
    - set -euxo pipefail
    - flutter --version
    - flutter pub get $FLUTTER_APP_PROJECT_DIR
    - flutter analyze $FLUTTER_APP_PROJECT_DIR
    
test-flutter:
  stage: test
  only:
    - merge_requests
    - main
    - /^(alpha|beta|release)\/\d+\.\d+\.\d+$/
  image:
    name: "${HARBOR_REGISTRY}/${HARBOR_NLW_PROJECT}/nl-wallet-app-builder-flutter@sha256:9ca719afd0f3a3041334ba62eb8c91f0cd61031f4a59697d98260105cc9a2eaf"
  script:
    - set -euxo pipefail
    - flutter --version
    - (cd $FLUTTER_APP_PROJECT_DIR; flutter test --exclude-tags=golden)

test-flutter-ui:
  stage: test
  only:
    - merge_requests
    - main
    - /^(alpha|beta|release)\/\d+\.\d+\.\d+$/
  when: manual
  tags:
    - macos
  artifacts:
    name: "ui-test-failures"
    when: on_failure
    paths:
      - "**/failures/*.png"
  script:
    - set -euxo pipefail
    - flutter --version
    - (cd $FLUTTER_APP_PROJECT_DIR; flutter test --tags=golden)

test-rust:
  stage: test
  only:
    - merge_requests
    - main
    - /^(alpha|beta|release)\/\d+\.\d+\.\d+$/
  image:
    name: "${HARBOR_REGISTRY}/${HARBOR_NLW_PROJECT}/nl-wallet-app-builder-rust@sha256:9fc55037587a8bee2d1b572c2f88020f27e6a694914108445f0053a6f9bf588b"
  script:
    - set -euxo pipefail
    - cargo test --manifest-path wallet_core/Cargo.toml

test-ios:
  stage: test
  only:
    - merge_requests
    - main
    - /^(alpha|beta|release)\/\d+\.\d+\.\d+$/
  when: manual
  tags:
    - macos
  artifacts:
    name: "test_output"
    when: on_failure
    paths:
      - "**/fastlane/test_output/*"
  variables:
    FASTLANE_OPT_OUT_USAGE: "YES"
  script:
    - bundle install
    - bundle exec fastlane disable_flutter_analytics
    - bundle exec fastlane ios test

test-rust-analyze:
  stage: test
  only:
    - merge_requests
    - main
    - /^(alpha|beta|release)\/\d+\.\d+\.\d+$/
  image:
    name: "${HARBOR_REGISTRY}/${HARBOR_NLW_PROJECT}/nl-wallet-app-builder-rust@sha256:9fc55037587a8bee2d1b572c2f88020f27e6a694914108445f0053a6f9bf588b"
  script:
    - set -euxo pipefail
    - find wallet_core -mindepth 2 -type f -name Cargo.toml -print0 | xargs -0 -n1 cargo fmt --manifest-path
    - git diff
    - if [ $(git diff --shortstat | wc -l) -gt 0 ]; then echo "Rust formatting results in different files!"; exit 1; fi
    - cargo clippy --manifest-path wallet_core/Cargo.toml --all-features --tests -- -Dwarnings
    - grep ^exclude wallet_core/Cargo.toml | grep -oP '".*?"' | tr -d '"' | xargs -I "{}" cargo clippy --manifest-path wallet_core/{}/Cargo.toml --all-features --tests -- -Dwarnings

test-codegen:
  stage: test
  only:
    - merge_requests
    - main
    - /^(alpha|beta|release)\/\d+\.\d+\.\d+$/
  image:
    name: "${HARBOR_REGISTRY}/${HARBOR_NLW_PROJECT}/nl-wallet-app-builder-flutter-rust@sha256:5d1565690ad926995b6a06be731445595d3e236f9c3b01d28552a4372dcd3804"
  script:
    - set -euxo pipefail
    - flutter pub get $FLUTTER_APP_PROJECT_DIR
    - cargo run --manifest-path wallet_core/flutter_rust_bridge_codegen/Cargo.toml
    - cargo run --manifest-path wallet_core/Cargo.toml --bin serde_reflection_codegen --features serde_reflection_codegen
    - git diff
    - if [ $(git diff --shortstat | wc -l) -gt 0 ]; then echo "Code generation results in different files!"; exit 1; fi

build-android-app:
  stage: build
  only:
    - main
    - /^(alpha|beta|release)\/\d+\.\d+\.\d+$/
  image:
    name: "${HARBOR_REGISTRY}/${HARBOR_NLW_PROJECT}/nl-wallet-app-builder-android-flutter-rust@sha256:5d1565690ad926995b6a06be731445595d3e236f9c3b01d28552a4372dcd3804"
  artifacts:
    name: "wallet-android"
    paths:
      - "*.aab"
  environment:
    name: ${K8S_CLUSTER}
    kubernetes:
      namespace: ${K8S_NAMESPACE}
  variables:
    LC_ALL: "C.UTF-8"
    LANG: "C.UTF-8"
    FASTLANE_OPT_OUT_USAGE: "YES"
  script:
    - bundle install
    - bundle exec fastlane disable_flutter_analytics
    - bundle exec fastlane android ci_build

deploy-android-app:
  stage: deploy
  only:
    - main
    - /^(alpha|beta|release)\/\d+\.\d+\.\d+$/
  image:
    name: "${HARBOR_REGISTRY}/${HARBOR_NLW_PROJECT}/nl-wallet-app-builder-fastlane@sha256:236dcbd0e901b377f37beac891555561b52656e3c20a96f6c44cdd1d223d51e0"
  needs:
    - build-android-app
  dependencies:
    - build-android-app
  environment:
    name: ${K8S_CLUSTER}
    kubernetes:
      namespace: ${K8S_NAMESPACE}
  variables:
    LC_ALL: "C.UTF-8"
    LANG: "C.UTF-8"
    FASTLANE_OPT_OUT_USAGE: "YES"
  script:
    - bundle install
    - bundle exec fastlane android ci_deploy

upload-browserstack-android-app:
  stage: deploy
  only:
    - main
  image:
    name: "${HARBOR_REGISTRY}/${HARBOR_NLW_PROJECT}/nl-wallet-app-builder-fastlane@sha256:236dcbd0e901b377f37beac891555561b52656e3c20a96f6c44cdd1d223d51e0"
  needs:
    - build-android-app
  dependencies:
    - build-android-app
  environment:
    name: ${K8S_CLUSTER}
    kubernetes:
      namespace: ${K8S_NAMESPACE}
  variables:
    LC_ALL: "C.UTF-8"
    LANG: "C.UTF-8"
    FASTLANE_OPT_OUT_USAGE: "YES"
  script:
    - bundle install
    - bundle exec fastlane android ci_browserstack

build-ios-app:
  stage: build
  only:
    - main
    - /^(alpha|beta|release)\/\d+\.\d+\.\d+$/
  when: manual
  tags:
    - macos
  artifacts:
    name: "wallet-ios"
    paths:
      - "*.ipa"
  environment:
    name: ${K8S_CLUSTER}
    kubernetes:
      namespace: ${K8S_NAMESPACE}
  variables:
    FASTLANE_OPT_OUT_USAGE: "YES"
  script:
    - bundle install
    - bundle exec fastlane disable_flutter_analytics
    - bundle exec fastlane ios ci_build

deploy-ios-app:
  stage: deploy
  only:
    - main
    - /^(alpha|beta|release)\/\d+\.\d+\.\d+$/
  needs:
    - build-ios-app
  dependencies:
    - build-ios-app
  tags:
    - macos
  environment:
    name: ${K8S_CLUSTER}
    kubernetes:
      namespace: ${K8S_NAMESPACE}
  variables:
    FASTLANE_OPT_OUT_USAGE: "YES"
  script:
    - bundle install
    - bundle exec fastlane disable_flutter_analytics
    - bundle exec fastlane ios ci_deploy

upload-browserstack-ios-app:
  stage: deploy
  only:
    - main
  image:
    name: "${HARBOR_REGISTRY}/${HARBOR_NLW_PROJECT}/nl-wallet-app-builder-fastlane@sha256:236dcbd0e901b377f37beac891555561b52656e3c20a96f6c44cdd1d223d51e0"
  needs:
    - build-ios-app
  dependencies:
    - build-ios-app
  environment:
    name: ${K8S_CLUSTER}
    kubernetes:
      namespace: ${K8S_NAMESPACE}
  variables:
    LC_ALL: "C.UTF-8"
    LANG: "C.UTF-8"
    FASTLANE_OPT_OUT_USAGE: "YES"
  script:
    - bundle install
    - bundle exec fastlane ios ci_browserstack
